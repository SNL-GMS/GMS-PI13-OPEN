{{- $appName := "etcd" }}
{{- $appValues := get .Values $appName }}
{{/* Remove the Deployment if the app's restartDuringReconfig and the reconfigInProgress value are both true */}}
{{- if not (and $appValues.restartDuringReconfig .Values.reconfigInProgress) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $appName }}
spec:
  replicas: {{ $appValues.replicas }}
  strategy:
    type: {{ include "soh.deployment.strategy" (dict "Values" .Values "appValues" $appValues) }}
  selector:
    matchLabels:
      app: {{ $appName }}
  template:
    metadata:
      labels:
        app: {{ $appName }}
    spec:
      serviceAccount: gms-soh-elevated
      containers:
        - name: {{ $appName }}
          image: {{ include "soh.deployment.image" (dict "Values" .Values "appValues" $appValues) }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: GMS_ETCD_USER
              valueFrom:
                secretKeyRef:
                  name: "etcd-gms-user"
                  key:  username
            - name: GMS_ETCD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "etcd-gms-user"
                  key: password
            - name: GMS_ETCD_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: "etcd-admin-user"
                  key:  username
            - name: GMS_ETCD_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "etcd-admin-user"
                  key: password
            - name: GMS_ETCD_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: "etcd-root-user"
                  key:  username
            - name: GMS_ETCD_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "etcd-root-user"
                  key: password
            {{- include "soh.app.deployment.env" (dict "appName" $appName "appEnv" $appValues.env "globalEnv" .Values.env "context" $) }}
          ports:
            - containerPort: 2379
{{- if or (and $appValues.cpu_requests $appValues.cpu_limit) (and $appValues.memory_requests $appValues.memory_limit)}}
          resources:
            requests:
{{- if ($appValues.cpu_requests)}}
              cpu: {{ $appValues.cpu_requests }}
{{- end }}
{{- if ($appValues.memory_requests)}}
              memory: {{ $appValues.memory_requests }}
{{- end }}
            limits:
{{- if ($appValues.cpu_limit)}}
              cpu: {{ $appValues.cpu_limit }}
{{- end }}
{{- if ($appValues.memory_limit)}}
              memory: {{ $appValues.memory_limit }}
{{- end }}
{{- end }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $appName }}
spec:
  type: ClusterIP
  ports:
    - name: etcd
      port: 2379
      protocol: TCP
      targetPort: 2379
  selector:
    app: {{ $appName }}
