# Represents a qc mask for a time segment for one or more channels.
type QcMask {

    # Unique identifier of QC mask
    id: String!

    # The name for the processing channel
    channelName: String!

    # QC Mask Version 
    qcMaskVersions: [QcMaskVersion]!

    # Current Mask Version
    currentVersion: QcMaskVersion!
},

# QC mask information
type QcMaskVersion {
    category: String!
    channelSegmentIds: [String]!
    startTime: Float!
    endTime: Float!
    parentQcMasks: [QcMask]!
    rationale: String!
    type: String
    version: Int!
},

extend type Query {
    # Get all QcMasks for each channel that that fall within the start and endtime
    # If no channelNames are provided, Get all masks in the specified time range
    qcMasksByChannelName(timeRange: TimeRange!, channelNames: [String]): [QcMask]
},

# Input to QC Mask mutations
input QcMaskInput {
    timeRange: TimeRange

    category: String

    type: String

    rationale: String
}

# The following QC Mask mutations are supported.
extend type Mutation {
    # Creates new QC Masks
    createQcMask (channelNames: [String]!, input: QcMaskInput!): DataPayload

    # Update an existing QC Mask using the provided input
    updateQcMask (qcMaskId: String!, input: QcMaskInput!): DataPayload

    # Reject an existing QC Mask
    rejectQcMask (qcMaskId: String!, rationale: String): DataPayload 
}

# The following subscription are supported.
extend type Subscription {
    # Subscribe for updates to QC masks on the specified channels in the
    # specified time range
    # If no parameters are provided, subscribe for all mask updates

    # Subscription for QC Masks created
    qcMasksCreated (timeRange: TimeRange, channelNames: [String]): [QcMask]   
}