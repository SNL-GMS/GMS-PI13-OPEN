// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login screen Authenticated and accessing login page should return redirect 1`] = `
<Redirect
  to={
    Object {
      "pathname": "/",
    }
  }
/>
`;

exports[`Login screen Connected, authentication check complete, and not authenticated should return login page 1`] = `
<LoginScreenComponent
  authenticated={false}
  authenticationCheckComplete={true}
  failedToConnect={false}
  location={
    Object {
      "state": undefined,
    }
  }
  setAuthStatus={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "authenticated": false,
            "authenticationCheckComplete": true,
            "failedToConnect": [MockFunction],
            "userName": "someUser",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="bp3-dark login-screen-body"
  >
    <div
      className="login-container"
    >
      <img
        src="test-file-stub"
        width={370}
      />
      <div
        className="login-legal"
      />
      <div
        className="login-row user"
      >
        <div
          className="login-label"
        >
          Username:
        </div>
        <div
          className="login-input"
        >
          <input
            className="login-input"
            data-cy="username-input"
            onChange={[Function]}
            onKeyDown={[Function]}
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        className="login-row password"
      >
        <div
          className="login-label"
        >
          Password:
        </div>
        <div
          className="login-input"
        >
          <input
            className="login-input"
            disabled={true}
            onKeyDown={[Function]}
            type="password"
            value=""
          />
        </div>
      </div>
      <div
        className="login-row login-button"
      >
        <Blueprint3.Button
          data-cy="login-btn"
          disabled={true}
          onClick={[Function]}
          text="Login"
        >
          <button
            className="bp3-button bp3-disabled"
            data-cy="login-btn"
            disabled={true}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            tabIndex={-1}
            type="button"
          >
            <Blueprint3.Icon
              key="leftIcon"
            />
            <span
              className="bp3-button-text"
              key="text"
            >
              Login
            </span>
            <Blueprint3.Icon
              key="rightIcon"
            />
          </button>
        </Blueprint3.Button>
      </div>
    </div>
  </div>
</LoginScreenComponent>
`;

exports[`Login screen failed authentication check complete should return non ideal state 1`] = `
<LoginScreenComponent
  authenticated={false}
  authenticationCheckComplete={false}
  failedToConnect={false}
  location={
    Object {
      "state": undefined,
    }
  }
  setAuthStatus={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "authenticated": false,
            "authenticationCheckComplete": true,
            "failedToConnect": [MockFunction],
            "userName": "someUser",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <Blueprint3.NonIdealState
    action={
      <Blueprint3.Spinner
        intent="primary"
      />
    }
    description="Attempting to login..."
    title="Checking login"
  >
    <div
      className="bp3-non-ideal-state"
    >
      <Component>
        <h4
          className="bp3-heading"
        >
          Checking login
        </h4>
      </Component>
      <div>
        Attempting to login...
      </div>
      <Blueprint3.Spinner
        intent="primary"
      >
        <div
          className="bp3-spinner bp3-intent-primary"
        >
          <div
            className="bp3-spinner-animation"
          >
            <svg
              height={50}
              strokeWidth="8.00"
              viewBox="1.00 1.00 98.00 98.00"
              width={50}
            >
              <path
                className="bp3-spinner-track"
                d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
              />
              <path
                className="bp3-spinner-head"
                d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                pathLength={280}
                strokeDasharray="280 280"
                strokeDashoffset={210}
              />
            </svg>
          </div>
        </div>
      </Blueprint3.Spinner>
    </div>
  </Blueprint3.NonIdealState>
</LoginScreenComponent>
`;

exports[`Login screen failed to connect should return non ideal state 1`] = `
<LoginScreenComponent
  authenticated={false}
  authenticationCheckComplete={false}
  failedToConnect={true}
  location={
    Object {
      "state": undefined,
    }
  }
  setAuthStatus={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "authenticated": false,
            "authenticationCheckComplete": true,
            "failedToConnect": [MockFunction],
            "userName": "someUser",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <Blueprint3.NonIdealState
    action={
      <Blueprint3.Spinner
        intent="danger"
      />
    }
    description="Attempting to connect..."
    icon="error"
    title="No connection to server"
  >
    <div
      className="bp3-non-ideal-state"
    >
      <div
        className="bp3-non-ideal-state-visual"
      >
        <Blueprint3.Icon
          icon="error"
          iconSize={60}
        >
          <span
            className="bp3-icon bp3-icon-error"
            icon="error"
          >
            <svg
              data-icon="error"
              height={60}
              viewBox="0 0 20 20"
              width={60}
            >
              <desc>
                error
              </desc>
              <path
                d="M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm1 16H9v-2h2v2zm0-3H9V4h2v9z"
                fillRule="evenodd"
                key="0"
              />
            </svg>
          </span>
        </Blueprint3.Icon>
      </div>
      <Component>
        <h4
          className="bp3-heading"
        >
          No connection to server
        </h4>
      </Component>
      <div>
        Attempting to connect...
      </div>
      <Blueprint3.Spinner
        intent="danger"
      >
        <div
          className="bp3-spinner bp3-intent-danger"
        >
          <div
            className="bp3-spinner-animation"
          >
            <svg
              height={50}
              strokeWidth="8.00"
              viewBox="1.00 1.00 98.00 98.00"
              width={50}
            >
              <path
                className="bp3-spinner-track"
                d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
              />
              <path
                className="bp3-spinner-head"
                d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                pathLength={280}
                strokeDasharray="280 280"
                strokeDashoffset={210}
              />
            </svg>
          </div>
        </div>
      </Blueprint3.Spinner>
    </div>
  </Blueprint3.NonIdealState>
</LoginScreenComponent>
`;
