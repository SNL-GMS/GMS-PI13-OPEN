// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SohBarChartPanel class should match snapshot 1`] = `
<ApolloProvider
  client={
    DefaultClient {
      "cache": InMemoryCache {
        "addTypename": true,
        "cacheKeyRoot": KeyTrie {
          "weakness": true,
        },
        "config": Object {
          "addTypename": true,
          "dataIdFromObject": [Function],
          "fragmentMatcher": HeuristicFragmentMatcher {},
          "freezeResults": false,
          "resultCaching": true,
        },
        "data": DepTrackingCache {
          "data": Object {},
          "depend": [Function],
        },
        "maybeBroadcastWatch": [Function],
        "optimisticData": DepTrackingCache {
          "data": Object {},
          "depend": [Function],
        },
        "silenceBroadcast": false,
        "storeReader": StoreReader {
          "executeSelectionSet": [Function],
          "executeStoreQuery": [Function],
          "executeSubSelectedArray": [Function],
          "freezeResults": false,
        },
        "storeWriter": StoreWriter {},
        "typenameDocumentCache": Map {},
        "watches": Set {},
      },
      "clearStoreCallbacks": Array [],
      "defaultOptions": Object {},
      "disableNetworkFetches": false,
      "link": ApolloLink {
        "request": [Function],
      },
      "localState": LocalState {
        "cache": InMemoryCache {
          "addTypename": true,
          "cacheKeyRoot": KeyTrie {
            "weakness": true,
          },
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "freezeResults": false,
            "resultCaching": true,
          },
          "data": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimisticData": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
            "executeSubSelectedArray": [Function],
            "freezeResults": false,
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {},
          "watches": Set {},
        },
        "client": [Circular],
      },
      "mutate": [Function],
      "query": [Function],
      "queryDeduplication": true,
      "queryManager": QueryManager {
        "assumeImmutableResults": false,
        "clientAwareness": Object {
          "name": undefined,
          "version": undefined,
        },
        "dataStore": DataStore {
          "cache": InMemoryCache {
            "addTypename": true,
            "cacheKeyRoot": KeyTrie {
              "weakness": true,
            },
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "freezeResults": false,
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
              "executeSubSelectedArray": [Function],
              "freezeResults": false,
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {},
          },
        },
        "fetchQueryRejectFns": Map {},
        "idCounter": 1,
        "inFlightLinkObservables": Map {},
        "link": ApolloLink {
          "request": [Function],
        },
        "localState": LocalState {
          "cache": InMemoryCache {
            "addTypename": true,
            "cacheKeyRoot": KeyTrie {
              "weakness": true,
            },
            "config": Object {
              "addTypename": true,
              "dataIdFromObject": [Function],
              "fragmentMatcher": HeuristicFragmentMatcher {},
              "freezeResults": false,
              "resultCaching": true,
            },
            "data": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "maybeBroadcastWatch": [Function],
            "optimisticData": DepTrackingCache {
              "data": Object {},
              "depend": [Function],
            },
            "silenceBroadcast": false,
            "storeReader": StoreReader {
              "executeSelectionSet": [Function],
              "executeStoreQuery": [Function],
              "executeSubSelectedArray": [Function],
              "freezeResults": false,
            },
            "storeWriter": StoreWriter {},
            "typenameDocumentCache": Map {},
            "watches": Set {},
          },
          "client": [Circular],
        },
        "mutationStore": MutationStore {
          "store": Object {},
        },
        "onBroadcast": [Function],
        "pollingInfoByQueryId": Map {},
        "queries": Map {},
        "queryDeduplication": true,
        "queryStore": QueryStore {
          "store": Object {},
        },
        "ssrMode": false,
        "transformCache": WeakMap {},
      },
      "reFetchObservableQueries": [Function],
      "resetStore": [Function],
      "resetStoreCallbacks": Array [],
      "store": DataStore {
        "cache": InMemoryCache {
          "addTypename": true,
          "cacheKeyRoot": KeyTrie {
            "weakness": true,
          },
          "config": Object {
            "addTypename": true,
            "dataIdFromObject": [Function],
            "fragmentMatcher": HeuristicFragmentMatcher {},
            "freezeResults": false,
            "resultCaching": true,
          },
          "data": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "maybeBroadcastWatch": [Function],
          "optimisticData": DepTrackingCache {
            "data": Object {},
            "depend": [Function],
          },
          "silenceBroadcast": false,
          "storeReader": StoreReader {
            "executeSelectionSet": [Function],
            "executeStoreQuery": [Function],
            "executeSubSelectedArray": [Function],
            "freezeResults": false,
          },
          "storeWriter": StoreWriter {},
          "typenameDocumentCache": Map {},
          "watches": Set {},
        },
      },
      "typeDefs": undefined,
      "version": "2.6.4",
      "watchQuery": [Function],
    }
  }
>
  <Component
    minHeightPx={100}
    quietChannelMonitorStatuses={[MockFunction]}
    sohStatus={
      Object {
        "error": undefined,
        "lastUpdated": 0,
        "loading": false,
        "stationAndStationGroupSoh": Object {
          "isUpdateResponse": false,
          "stationGroups": Array [],
          "stationSoh": Array [
            Object {
              "allStationAggregates": Array [],
              "channelSohs": Array [
                Object {
                  "allSohMonitorValueAndStatuses": Array [
                    Object {
                      "contributing": false,
                      "hasUnacknowledgedChanges": true,
                      "monitorType": "LAG",
                      "quietUntilMs": 1,
                      "status": "GOOD",
                      "thresholdBad": 3,
                      "thresholdMarginal": 3,
                      "value": 10,
                      "valuePresent": true,
                    },
                    Object {
                      "contributing": false,
                      "hasUnacknowledgedChanges": true,
                      "monitorType": "LAG",
                      "quietUntilMs": 1,
                      "status": "GOOD",
                      "thresholdBad": 3,
                      "thresholdMarginal": 3,
                      "value": 11,
                      "valuePresent": true,
                    },
                  ],
                  "channelName": "adsf",
                  "channelSohStatus": undefined,
                },
              ],
              "id": "1",
              "needsAcknowledgement": true,
              "needsAttention": true,
              "sohStatusSummary": undefined,
              "stationGroups": Array [],
              "stationName": "1",
              "statusContributors": Array [],
              "time": undefined,
              "uuid": "1",
            },
          ],
        },
      }
    }
    station={
      Object {
        "allStationAggregates": Array [],
        "channelSohs": Array [
          Object {
            "allSohMonitorValueAndStatuses": Array [
              Object {
                "contributing": false,
                "hasUnacknowledgedChanges": true,
                "monitorType": "LAG",
                "quietUntilMs": 1,
                "status": "GOOD",
                "thresholdBad": 3,
                "thresholdMarginal": 3,
                "value": 10,
                "valuePresent": true,
              },
              Object {
                "contributing": false,
                "hasUnacknowledgedChanges": true,
                "monitorType": "LAG",
                "quietUntilMs": 1,
                "status": "GOOD",
                "thresholdBad": 3,
                "thresholdMarginal": 3,
                "value": 11,
                "valuePresent": true,
              },
            ],
            "channelName": "adsf",
            "channelSohStatus": undefined,
          },
          Object {
            "allSohMonitorValueAndStatuses": Array [
              Object {
                "contributing": false,
                "hasUnacknowledgedChanges": true,
                "monitorType": "LAG",
                "quietUntilMs": 1,
                "status": "GOOD",
                "thresholdBad": 3,
                "thresholdMarginal": 3,
                "value": 10,
                "valuePresent": true,
              },
              Object {
                "contributing": false,
                "hasUnacknowledgedChanges": true,
                "monitorType": "LAG",
                "quietUntilMs": 1,
                "status": "GOOD",
                "thresholdBad": 3,
                "thresholdMarginal": 3,
                "value": 11,
                "valuePresent": true,
              },
            ],
            "channelName": "adsf2",
            "channelSohStatus": undefined,
          },
        ],
        "id": "1",
        "needsAcknowledgement": true,
        "needsAttention": true,
        "sohStatusSummary": undefined,
        "stationGroups": Array [],
        "stationName": "1",
        "statusContributors": Array [],
        "time": undefined,
        "uuid": "1",
      }
    }
    type="LAG"
    uiAnalystConfiguration={
      Object {
        "acknowledgementQuietDuration": 0,
        "availableQuietDurations": Array [],
        "defaultFilters": Array [],
        "defaultNetwork": undefined,
        "logLevel": "info",
        "redisplayPeriod": 5,
        "reprocessingPeriod": 20,
        "sohHistoricalDurations": Array [
          300000,
          900000,
        ],
        "sohStationGroupNames": Array [],
        "sohStationStaleTimeMS": 30000,
        "systemMessageLimit": 1000,
      }
    }
    valueType="INTEGER"
  >
    <div
      className="missing-wrapper"
      style={
        Object {
          "minHeight": 172,
        }
      }
    >
      <Component
        forwardRef={
          Object {
            "current": <div
              class="soh-drill-down__header"
            >
              <div
                class="toolbar"
                style="width: 110px;"
              >
                <div
                  class="toolbar__left-group"
                >
                  <div
                    class="toolbar-item toolbar-item__left"
                  >
                    <div>
                      <div
                        data-cy="filter-soh"
                      >
                        <button
                          class="bp3-button bp3-align-left toolbar-button"
                          style="width: 200px;"
                          title="Filter by Status"
                          type="button"
                        >
                          <span
                            class="bp3-button-text"
                          >
                            <span>
                              Filter by Status
                            </span>
                            <span
                              class="bp3-icon bp3-icon-chevron-down"
                              icon="chevron-down"
                            >
                              <svg
                                data-icon="chevron-down"
                                height="16"
                                viewBox="0 0 16 16"
                                width="16"
                              >
                                <path
                                  d="M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 5z"
                                  fill-rule="evenodd"
                                />
                              </svg>
                            </span>
                          </span>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  class="toolbar__center-group"
                >
                  <div
                    class="toolbar__whitespace"
                    style="width: 94px;"
                  />
                </div>
                <div
                  class="toolbar__right-group"
                >
                  <div
                    class="toolbar-item
                    "
                  >
                    <div>
                      <div
                        class="bp3-html-select"
                      >
                        <select
                          style="min-width: 220px; width: 220px;"
                          title="Sort"
                        >
                          <option
                            value="Lag: highest to lowest"
                          >
                            Lag: highest to lowest
                          </option>
                          <option
                            value="Lag: lowest to highest"
                          >
                            Lag: lowest to highest
                          </option>
                          <option
                            value="Channel: A - Z"
                          >
                            Channel: A - Z
                          </option>
                          <option
                            value="Channel: Z - A"
                          >
                            Channel: Z - A
                          </option>
                        </select>
                        <span
                          class="bp3-icon bp3-icon-double-caret-vertical"
                          icon="double-caret-vertical"
                        >
                          <svg
                            data-icon="double-caret-vertical"
                            height="16"
                            viewBox="0 0 16 16"
                            width="16"
                          >
                            <desc>
                              double-caret-vertical
                            </desc>
                            <path
                              d="M5 7h6a1.003 1.003 0 00.71-1.71l-3-3C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-3 3A1.003 1.003 0 005 7zm6 2H5a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 9z"
                              fill-rule="evenodd"
                            />
                          </svg>
                        </span>
                      </div>
                    </div>
                  </div>
                  <div
                    class="toolbar-item
                    "
                  >
                    <div
                      class="toolbar-label-value"
                      style="margin-left: 1em;"
                    >
                      <div
                        class="label-value-container"
                      >
                        <div
                          class="label-value__label"
                        >
                          Last Updated: 
                        </div>
                        <div
                          class="label-value__value"
                          title="Most recent SOH data received"
                        >
                          -
                        </div>
                      </div>
                    </div>
                  </div>
                  <div
                    class="toolbar-item
                    "
                  >
                    <div
                      class="toolbar-label-value"
                    >
                      <div
                        class="label-value-container"
                      >
                        <div
                          class="label-value__label"
                        >
                          Update Interval: 
                        </div>
                        <div
                          class="label-value__value"
                          title="Interval at which SOH data is processed"
                        >
                          20 seconds
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div
                class="soh-drill-down-station-label display-title"
              >
                1
                <div
                  class="display-title__subtitle"
                >
                  Current lag per channel
                </div>
              </div>
            </div>,
          }
        }
        isStale={false}
        monitorType="LAG"
        setStatusesToDisplay={[Function]}
        sortDropdown={
          Object {
            "dropdownOptions": Object {
              "CHANNEL_FIRST": "Channel: A - Z",
              "CHANNEL_LAST": "Channel: Z - A",
              "LAG_HIGHEST": "Lag: highest to lowest",
              "LAG_LOWEST": "Lag: lowest to highest",
            },
            "label": "Sort Channels",
            "onChange": [Function],
            "rank": 1,
            "tooltip": "Sort",
            "type": "Dropdown",
            "value": "Channel: A - Z",
            "widthPx": 220,
          }
        }
        station={
          Object {
            "allStationAggregates": Array [],
            "channelSohs": Array [
              Object {
                "allSohMonitorValueAndStatuses": Array [
                  Object {
                    "contributing": false,
                    "hasUnacknowledgedChanges": true,
                    "monitorType": "LAG",
                    "quietUntilMs": 1,
                    "status": "GOOD",
                    "thresholdBad": 3,
                    "thresholdMarginal": 3,
                    "value": 10,
                    "valuePresent": true,
                  },
                  Object {
                    "contributing": false,
                    "hasUnacknowledgedChanges": true,
                    "monitorType": "LAG",
                    "quietUntilMs": 1,
                    "status": "GOOD",
                    "thresholdBad": 3,
                    "thresholdMarginal": 3,
                    "value": 11,
                    "valuePresent": true,
                  },
                ],
                "channelName": "adsf",
                "channelSohStatus": undefined,
              },
              Object {
                "allSohMonitorValueAndStatuses": Array [
                  Object {
                    "contributing": false,
                    "hasUnacknowledgedChanges": true,
                    "monitorType": "LAG",
                    "quietUntilMs": 1,
                    "status": "GOOD",
                    "thresholdBad": 3,
                    "thresholdMarginal": 3,
                    "value": 10,
                    "valuePresent": true,
                  },
                  Object {
                    "contributing": false,
                    "hasUnacknowledgedChanges": true,
                    "monitorType": "LAG",
                    "quietUntilMs": 1,
                    "status": "GOOD",
                    "thresholdBad": 3,
                    "thresholdMarginal": 3,
                    "value": 11,
                    "valuePresent": true,
                  },
                ],
                "channelName": "adsf2",
                "channelSohStatus": undefined,
              },
            ],
            "id": "1",
            "needsAcknowledgement": true,
            "needsAttention": true,
            "sohStatusSummary": undefined,
            "stationGroups": Array [],
            "stationName": "1",
            "statusContributors": Array [],
            "time": undefined,
            "uuid": "1",
          }
        }
        statusesToDisplay={
          Map {
            "GOOD" => true,
            "BAD" => true,
            "MARGINAL" => true,
            "NONE" => true,
          }
        }
        uiAnalystConfiguration={
          Object {
            "acknowledgementQuietDuration": 0,
            "availableQuietDurations": Array [],
            "defaultFilters": Array [],
            "defaultNetwork": undefined,
            "logLevel": "info",
            "redisplayPeriod": 5,
            "reprocessingPeriod": 20,
            "sohHistoricalDurations": Array [
              300000,
              900000,
            ],
            "sohStationGroupNames": Array [],
            "sohStationStaleTimeMS": 30000,
            "systemMessageLimit": 1000,
          }
        }
      >
        <div
          className="soh-drill-down__header"
        >
          <Component
            displayTimeWarning={false}
            leftItems={Array []}
            rightItems={
              Array [
                Object {
                  "dropdownOptions": Object {
                    "CHANNEL_FIRST": "Channel: A - Z",
                    "CHANNEL_LAST": "Channel: Z - A",
                    "LAG_HIGHEST": "Lag: highest to lowest",
                    "LAG_LOWEST": "Lag: lowest to highest",
                  },
                  "label": "Sort Channels",
                  "onChange": [Function],
                  "rank": 1,
                  "tooltip": "Sort",
                  "type": "Dropdown",
                  "value": "Channel: A - Z",
                  "widthPx": 220,
                },
              ]
            }
            setStatusesToDisplay={[Function]}
            sohStationStaleTimeMS={30000}
            statusFilterText="Filter by Status"
            statusesToDisplay={
              Map {
                "GOOD" => true,
                "BAD" => true,
                "MARGINAL" => true,
                "NONE" => true,
              }
            }
            toggleHighlight={[Function]}
            updateIntervalSecs={20}
            widthPx={150}
          >
            <Component
              items={
                Array [
                  Object {
                    "dropdownOptions": Object {
                      "CHANNEL_FIRST": "Channel: A - Z",
                      "CHANNEL_LAST": "Channel: Z - A",
                      "LAG_HIGHEST": "Lag: highest to lowest",
                      "LAG_LOWEST": "Lag: lowest to highest",
                    },
                    "label": "Sort Channels",
                    "onChange": [Function],
                    "rank": 1,
                    "tooltip": "Sort",
                    "type": "Dropdown",
                    "value": "Channel: A - Z",
                    "widthPx": 220,
                  },
                  Object {
                    "hasIssue": false,
                    "label": "Last Updated",
                    "rank": 2,
                    "style": Object {
                      "marginLeft": "1em",
                    },
                    "tooltip": "Most recent SOH data received",
                    "tooltipForIssue": "SOH data has not updated in over 30 seconds",
                    "type": "LabelValue",
                    "value": "-",
                    "widthPx": 400,
                  },
                  Object {
                    "label": "Update Interval",
                    "rank": 3,
                    "tooltip": "Interval at which SOH data is processed",
                    "type": "LabelValue",
                    "value": "20 seconds",
                    "widthPx": 400,
                  },
                ]
              }
              itemsLeft={
                Array [
                  Object {
                    "colors": Map {
                      "GOOD" => "#fff",
                      "MARGINAL" => "#fff",
                      "BAD" => "#fff",
                      "NONE" => "NULL_CHECKBOX_COLOR_SWATCH",
                    },
                    "cyData": "filter-soh",
                    "enumKeysToDisplayStrings": Map {
                      "GOOD" => "Good",
                      "MARGINAL" => "Marginal",
                      "BAD" => "Bad",
                      "NONE" => "None",
                    },
                    "enumOfKeys": Object {
                      "BAD": "BAD",
                      "GOOD": "GOOD",
                      "MARGINAL": "MARGINAL",
                      "NONE": "NONE",
                    },
                    "label": "Filter by Status",
                    "menuLabel": "Filter by Status",
                    "onChange": [Function],
                    "onPopUp": [Function],
                    "onPopoverDismissed": [Function],
                    "rank": 1,
                    "tooltip": "Filter by Status",
                    "type": "CheckboxList",
                    "values": Map {
                      "GOOD" => true,
                      "BAD" => true,
                      "MARGINAL" => true,
                      "NONE" => true,
                    },
                    "widthPx": 200,
                  },
                ]
              }
              widthPx={150}
            >
              <ToolbarComponent
                items={
                  Array [
                    Object {
                      "dropdownOptions": Object {
                        "CHANNEL_FIRST": "Channel: A - Z",
                        "CHANNEL_LAST": "Channel: Z - A",
                        "LAG_HIGHEST": "Lag: highest to lowest",
                        "LAG_LOWEST": "Lag: lowest to highest",
                      },
                      "label": "Sort Channels",
                      "onChange": [Function],
                      "rank": 1,
                      "tooltip": "Sort",
                      "type": "Dropdown",
                      "value": "Channel: A - Z",
                      "widthPx": 220,
                    },
                    Object {
                      "hasIssue": false,
                      "label": "Last Updated",
                      "rank": 2,
                      "style": Object {
                        "marginLeft": "1em",
                      },
                      "tooltip": "Most recent SOH data received",
                      "tooltipForIssue": "SOH data has not updated in over 30 seconds",
                      "type": "LabelValue",
                      "value": "-",
                      "widthPx": 400,
                    },
                    Object {
                      "label": "Update Interval",
                      "rank": 3,
                      "tooltip": "Interval at which SOH data is processed",
                      "type": "LabelValue",
                      "value": "20 seconds",
                      "widthPx": 400,
                    },
                  ]
                }
                itemsLeft={
                  Array [
                    Object {
                      "colors": Map {
                        "GOOD" => "#fff",
                        "MARGINAL" => "#fff",
                        "BAD" => "#fff",
                        "NONE" => "NULL_CHECKBOX_COLOR_SWATCH",
                      },
                      "cyData": "filter-soh",
                      "enumKeysToDisplayStrings": Map {
                        "GOOD" => "Good",
                        "MARGINAL" => "Marginal",
                        "BAD" => "Bad",
                        "NONE" => "None",
                      },
                      "enumOfKeys": Object {
                        "BAD": "BAD",
                        "GOOD": "GOOD",
                        "MARGINAL": "MARGINAL",
                        "NONE": "NONE",
                      },
                      "label": "Filter by Status",
                      "menuLabel": "Filter by Status",
                      "onChange": [Function],
                      "onPopUp": [Function],
                      "onPopoverDismissed": [Function],
                      "rank": 1,
                      "tooltip": "Filter by Status",
                      "type": "CheckboxList",
                      "values": Map {
                        "GOOD" => true,
                        "BAD" => true,
                        "MARGINAL" => true,
                        "NONE" => true,
                      },
                      "widthPx": 200,
                    },
                  ]
                }
                minWhiteSpacePx={1}
                toolbarWidthPx={110}
                widthPx={150}
              >
                <div
                  className="toolbar"
                  style={
                    Object {
                      "width": "110px",
                    }
                  }
                >
                  <div
                    className="toolbar__left-group"
                  >
                    <div
                      className="toolbar-item toolbar-item__left"
                      key="1"
                    >
                      <Component
                        addToPopoverMap={[Function]}
                        hasIssue={false}
                        item={
                          Object {
                            "colors": Map {
                              "GOOD" => "#fff",
                              "MARGINAL" => "#fff",
                              "BAD" => "#fff",
                              "NONE" => "NULL_CHECKBOX_COLOR_SWATCH",
                            },
                            "cyData": "filter-soh",
                            "enumKeysToDisplayStrings": Map {
                              "GOOD" => "Good",
                              "MARGINAL" => "Marginal",
                              "BAD" => "Bad",
                              "NONE" => "None",
                            },
                            "enumOfKeys": Object {
                              "BAD": "BAD",
                              "GOOD": "GOOD",
                              "MARGINAL": "MARGINAL",
                              "NONE": "NONE",
                            },
                            "label": "Filter by Status",
                            "menuLabel": "Filter by Status",
                            "onChange": [Function],
                            "onPopUp": [Function],
                            "onPopoverDismissed": [Function],
                            "rank": 1,
                            "tooltip": "Filter by Status",
                            "type": "CheckboxList",
                            "values": Map {
                              "GOOD" => true,
                              "BAD" => true,
                              "MARGINAL" => true,
                              "NONE" => true,
                            },
                            "widthPx": 200,
                          }
                        }
                        key="1"
                      >
                        <div
                          style={Object {}}
                        >
                          <PopoverButtonComponent
                            cyData="filter-soh"
                            key="1"
                            label="Filter by Status"
                            onClick={[Function]}
                            onPopoverDismissed={[Function]}
                            popupContent={
                              <CheckboxList
                                checkboxEnum={
                                  Object {
                                    "BAD": "BAD",
                                    "GOOD": "GOOD",
                                    "MARGINAL": "MARGINAL",
                                    "NONE": "NONE",
                                  }
                                }
                                enumKeysToDisplayStrings={
                                  Map {
                                    "GOOD" => "Good",
                                    "MARGINAL" => "Marginal",
                                    "BAD" => "Bad",
                                    "NONE" => "None",
                                  }
                                }
                                enumToCheckedMap={
                                  Map {
                                    "GOOD" => true,
                                    "BAD" => true,
                                    "MARGINAL" => true,
                                    "NONE" => true,
                                  }
                                }
                                enumToColorMap={
                                  Map {
                                    "GOOD" => "#fff",
                                    "MARGINAL" => "#fff",
                                    "BAD" => "#fff",
                                    "NONE" => "NULL_CHECKBOX_COLOR_SWATCH",
                                  }
                                }
                                onChange={[Function]}
                              />
                            }
                            tooltip="Filter by Status"
                            widthPx={200}
                          >
                            <div
                              data-cy="filter-soh"
                            >
                              <Blueprint3.Button
                                active={false}
                                alignText="left"
                                className="toolbar-button"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "width": "200px",
                                  }
                                }
                                title="Filter by Status"
                              >
                                <button
                                  className="bp3-button bp3-align-left toolbar-button"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  style={
                                    Object {
                                      "width": "200px",
                                    }
                                  }
                                  title="Filter by Status"
                                  type="button"
                                >
                                  <Blueprint3.Icon
                                    key="leftIcon"
                                  />
                                  <span
                                    className="bp3-button-text"
                                    key="text"
                                  >
                                    <span>
                                      Filter by Status
                                    </span>
                                    <Blueprint3.Icon
                                      icon="chevron-down"
                                      title={false}
                                    >
                                      <span
                                        className="bp3-icon bp3-icon-chevron-down"
                                        icon="chevron-down"
                                      >
                                        <svg
                                          data-icon="chevron-down"
                                          height={16}
                                          viewBox="0 0 16 16"
                                          width={16}
                                        >
                                          <path
                                            d="M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 5z"
                                            fillRule="evenodd"
                                            key="0"
                                          />
                                        </svg>
                                      </span>
                                    </Blueprint3.Icon>
                                  </span>
                                  <Blueprint3.Icon
                                    key="rightIcon"
                                  />
                                </button>
                              </Blueprint3.Button>
                            </div>
                          </PopoverButtonComponent>
                        </div>
                      </Component>
                    </div>
                  </div>
                  <div
                    className="toolbar__center-group"
                  >
                    <div
                      className="toolbar__whitespace"
                      style={
                        Object {
                          "width": "94px",
                        }
                      }
                    />
                  </div>
                  <div
                    className="toolbar__right-group"
                  >
                    <div
                      className="toolbar-item
                    "
                      key="1"
                    >
                      <Component
                        addToPopoverMap={[Function]}
                        hasIssue={false}
                        item={
                          Object {
                            "dropdownOptions": Object {
                              "CHANNEL_FIRST": "Channel: A - Z",
                              "CHANNEL_LAST": "Channel: Z - A",
                              "LAG_HIGHEST": "Lag: highest to lowest",
                              "LAG_LOWEST": "Lag: lowest to highest",
                            },
                            "label": "Sort Channels",
                            "onChange": [Function],
                            "rank": 1,
                            "tooltip": "Sort",
                            "type": "Dropdown",
                            "value": "Channel: A - Z",
                            "widthPx": 220,
                          }
                        }
                        key="1"
                      >
                        <div
                          style={Object {}}
                        >
                          <DropDown
                            dropDownItems={
                              Object {
                                "CHANNEL_FIRST": "Channel: A - Z",
                                "CHANNEL_LAST": "Channel: Z - A",
                                "LAG_HIGHEST": "Lag: highest to lowest",
                                "LAG_LOWEST": "Lag: lowest to highest",
                              }
                            }
                            key="1"
                            onMaybeValue={[Function]}
                            title="Sort"
                            value="Channel: A - Z"
                            widthPx={220}
                          >
                            <HTMLSelect
                              onChange={[Function]}
                              style={
                                Object {
                                  "minWidth": "220px",
                                  "width": "220px",
                                }
                              }
                              title="Sort"
                              value="Channel: A - Z"
                            >
                              <div
                                className="bp3-html-select"
                              >
                                <select
                                  multiple={false}
                                  onChange={[Function]}
                                  style={
                                    Object {
                                      "minWidth": "220px",
                                      "width": "220px",
                                    }
                                  }
                                  title="Sort"
                                  value="Channel: A - Z"
                                >
                                  <option
                                    key="LAG_HIGHEST"
                                    value="Lag: highest to lowest"
                                  >
                                    Lag: highest to lowest
                                  </option>
                                  <option
                                    key="LAG_LOWEST"
                                    value="Lag: lowest to highest"
                                  >
                                    Lag: lowest to highest
                                  </option>
                                  <option
                                    key="CHANNEL_FIRST"
                                    value="Channel: A - Z"
                                  >
                                    Channel: A - Z
                                  </option>
                                  <option
                                    key="CHANNEL_LAST"
                                    value="Channel: Z - A"
                                  >
                                    Channel: Z - A
                                  </option>
                                </select>
                                <Blueprint3.Icon
                                  icon="double-caret-vertical"
                                >
                                  <span
                                    className="bp3-icon bp3-icon-double-caret-vertical"
                                    icon="double-caret-vertical"
                                  >
                                    <svg
                                      data-icon="double-caret-vertical"
                                      height={16}
                                      viewBox="0 0 16 16"
                                      width={16}
                                    >
                                      <desc>
                                        double-caret-vertical
                                      </desc>
                                      <path
                                        d="M5 7h6a1.003 1.003 0 00.71-1.71l-3-3C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-3 3A1.003 1.003 0 005 7zm6 2H5a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 9z"
                                        fillRule="evenodd"
                                        key="0"
                                      />
                                    </svg>
                                  </span>
                                </Blueprint3.Icon>
                              </div>
                            </HTMLSelect>
                          </DropDown>
                        </div>
                      </Component>
                    </div>
                    <div
                      className="toolbar-item
                    "
                      key="2"
                    >
                      <Component
                        addToPopoverMap={[Function]}
                        hasIssue={false}
                        item={
                          Object {
                            "hasIssue": false,
                            "label": "Last Updated",
                            "rank": 2,
                            "style": Object {
                              "marginLeft": "1em",
                            },
                            "tooltip": "Most recent SOH data received",
                            "tooltipForIssue": "SOH data has not updated in over 30 seconds",
                            "type": "LabelValue",
                            "value": "-",
                            "widthPx": 400,
                          }
                        }
                        key="2"
                      >
                        <div
                          className="toolbar-label-value"
                          style={
                            Object {
                              "marginLeft": "1em",
                            }
                          }
                        >
                          <Component
                            label="Last Updated"
                            tooltip="Most recent SOH data received"
                            value="-"
                          >
                            <div
                              className="label-value-container"
                            >
                              <div
                                className="label-value__label"
                              >
                                Last Updated: 
                              </div>
                              <div
                                className="label-value__value"
                                style={
                                  Object {
                                    "color": "",
                                  }
                                }
                                title="Most recent SOH data received"
                              >
                                -
                              </div>
                            </div>
                          </Component>
                        </div>
                      </Component>
                    </div>
                    <div
                      className="toolbar-item
                    "
                      key="3"
                    >
                      <Component
                        addToPopoverMap={[Function]}
                        hasIssue={false}
                        item={
                          Object {
                            "label": "Update Interval",
                            "rank": 3,
                            "tooltip": "Interval at which SOH data is processed",
                            "type": "LabelValue",
                            "value": "20 seconds",
                            "widthPx": 400,
                          }
                        }
                        key="3"
                      >
                        <div
                          className="toolbar-label-value"
                          style={Object {}}
                        >
                          <Component
                            label="Update Interval"
                            tooltip="Interval at which SOH data is processed"
                            value="20 seconds"
                          >
                            <div
                              className="label-value-container"
                            >
                              <div
                                className="label-value__label"
                              >
                                Update Interval: 
                              </div>
                              <div
                                className="label-value__value"
                                style={
                                  Object {
                                    "color": "",
                                  }
                                }
                                title="Interval at which SOH data is processed"
                              >
                                20 seconds
                              </div>
                            </div>
                          </Component>
                        </div>
                      </Component>
                    </div>
                  </div>
                </div>
              </ToolbarComponent>
            </Component>
          </Component>
          <div
            className="soh-drill-down-station-label display-title"
          >
            1
            <div
              className="display-title__subtitle"
            >
              Current lag per channel
            </div>
          </div>
        </div>
      </Component>
      <Component
        channelSoh={
          Array [
            Object {
              "hasUnacknowledgedChanges": true,
              "isNullData": false,
              "name": "adsf",
              "quietDurationMs": undefined,
              "quietExpiresAt": 1,
              "status": "GOOD",
              "thresholdBad": 3,
              "thresholdMarginal": 3,
              "value": 10,
            },
            Object {
              "hasUnacknowledgedChanges": true,
              "isNullData": false,
              "name": "adsf2",
              "quietDurationMs": undefined,
              "quietExpiresAt": 1,
              "status": "GOOD",
              "thresholdBad": 3,
              "thresholdMarginal": 3,
              "value": 10,
            },
          ]
        }
        chartHeaderHeight={72}
        minHeightPx={100}
        quietChannelMonitorStatuses={[MockFunction]}
        sohStatus={
          Object {
            "error": undefined,
            "lastUpdated": 0,
            "loading": false,
            "stationAndStationGroupSoh": Object {
              "isUpdateResponse": false,
              "stationGroups": Array [],
              "stationSoh": Array [
                Object {
                  "allStationAggregates": Array [],
                  "channelSohs": Array [
                    Object {
                      "allSohMonitorValueAndStatuses": Array [
                        Object {
                          "contributing": false,
                          "hasUnacknowledgedChanges": true,
                          "monitorType": "LAG",
                          "quietUntilMs": 1,
                          "status": "GOOD",
                          "thresholdBad": 3,
                          "thresholdMarginal": 3,
                          "value": 10,
                          "valuePresent": true,
                        },
                        Object {
                          "contributing": false,
                          "hasUnacknowledgedChanges": true,
                          "monitorType": "LAG",
                          "quietUntilMs": 1,
                          "status": "GOOD",
                          "thresholdBad": 3,
                          "thresholdMarginal": 3,
                          "value": 11,
                          "valuePresent": true,
                        },
                      ],
                      "channelName": "adsf",
                      "channelSohStatus": undefined,
                    },
                  ],
                  "id": "1",
                  "needsAcknowledgement": true,
                  "needsAttention": true,
                  "sohStatusSummary": undefined,
                  "stationGroups": Array [],
                  "stationName": "1",
                  "statusContributors": Array [],
                  "time": undefined,
                  "uuid": "1",
                },
              ],
            },
          }
        }
        station={
          Object {
            "allStationAggregates": Array [],
            "channelSohs": Array [
              Object {
                "allSohMonitorValueAndStatuses": Array [
                  Object {
                    "contributing": false,
                    "hasUnacknowledgedChanges": true,
                    "monitorType": "LAG",
                    "quietUntilMs": 1,
                    "status": "GOOD",
                    "thresholdBad": 3,
                    "thresholdMarginal": 3,
                    "value": 10,
                    "valuePresent": true,
                  },
                  Object {
                    "contributing": false,
                    "hasUnacknowledgedChanges": true,
                    "monitorType": "LAG",
                    "quietUntilMs": 1,
                    "status": "GOOD",
                    "thresholdBad": 3,
                    "thresholdMarginal": 3,
                    "value": 11,
                    "valuePresent": true,
                  },
                ],
                "channelName": "adsf",
                "channelSohStatus": undefined,
              },
              Object {
                "allSohMonitorValueAndStatuses": Array [
                  Object {
                    "contributing": false,
                    "hasUnacknowledgedChanges": true,
                    "monitorType": "LAG",
                    "quietUntilMs": 1,
                    "status": "GOOD",
                    "thresholdBad": 3,
                    "thresholdMarginal": 3,
                    "value": 10,
                    "valuePresent": true,
                  },
                  Object {
                    "contributing": false,
                    "hasUnacknowledgedChanges": true,
                    "monitorType": "LAG",
                    "quietUntilMs": 1,
                    "status": "GOOD",
                    "thresholdBad": 3,
                    "thresholdMarginal": 3,
                    "value": 11,
                    "valuePresent": true,
                  },
                ],
                "channelName": "adsf2",
                "channelSohStatus": undefined,
              },
            ],
            "id": "1",
            "needsAcknowledgement": true,
            "needsAttention": true,
            "sohStatusSummary": undefined,
            "stationGroups": Array [],
            "stationName": "1",
            "statusContributors": Array [],
            "time": undefined,
            "uuid": "1",
          }
        }
        type="LAG"
        uiAnalystConfiguration={
          Object {
            "acknowledgementQuietDuration": 0,
            "availableQuietDurations": Array [],
            "defaultFilters": Array [],
            "defaultNetwork": undefined,
            "logLevel": "info",
            "redisplayPeriod": 5,
            "reprocessingPeriod": 20,
            "sohHistoricalDurations": Array [
              300000,
              900000,
            ],
            "sohStationGroupNames": Array [],
            "sohStationStaleTimeMS": 30000,
            "systemMessageLimit": 1000,
          }
        }
        valueType="INTEGER"
      >
        <Component
          barChartProps={
            Object {
              "barDefs": Array [
                Object {
                  "color": undefined,
                  "id": "adsf",
                  "value": Object {
                    "channelStatus": "GOOD",
                    "onContextMenus": Object {
                      "onContextMenuBar": [Function],
                      "onContextMenuBarLabel": [Function],
                    },
                    "quietDurationMs": undefined,
                    "quietUntilMs": 1,
                    "x": "adsf",
                    "y": 10,
                  },
                },
                Object {
                  "color": undefined,
                  "id": "adsf2",
                  "value": Object {
                    "channelStatus": "GOOD",
                    "onContextMenus": Object {
                      "onContextMenuBar": [Function],
                      "onContextMenuBarLabel": [Function],
                    },
                    "quietDurationMs": undefined,
                    "quietUntilMs": 1,
                    "x": "adsf2",
                    "y": 10,
                  },
                },
              ],
              "categories": Object {
                "x": Array [
                  "adsf",
                  "adsf2",
                ],
                "y": Array [],
              },
              "dataComponent": [Function],
              "disabled": Object {
                "xTicks": Object {
                  "disabledColor": "#fff",
                  "disabledCondition": [Function],
                },
              },
              "heightPx": undefined,
              "maxBarWidth": 150,
              "minBarWidth": 25,
              "onContextMenuBar": [Function],
              "onContextMenuBarLabel": [Function],
              "scrollBrushColor": "#fff",
              "thresholdsBad": Array [
                3,
                3,
              ],
              "thresholdsMarginal": Array [
                3,
                3,
              ],
              "widthPx": undefined,
              "xAxisLabel": "Channel Name",
              "xTickFormat": [Function],
              "xTickTooltips": Array [
                "10",
                "10",
              ],
              "yAxisLabel": "Lag (s)",
              "yTickFormat": [Function],
            }
          }
          id="LAG"
        >
          <div
            className="legend-and-charts"
          >
            <Component
              barDefs={
                Array [
                  Object {
                    "color": undefined,
                    "id": "adsf",
                    "value": Object {
                      "channelStatus": "GOOD",
                      "onContextMenus": Object {
                        "onContextMenuBar": [Function],
                        "onContextMenuBarLabel": [Function],
                      },
                      "quietDurationMs": undefined,
                      "quietUntilMs": 1,
                      "x": "adsf",
                      "y": 10,
                    },
                  },
                  Object {
                    "color": undefined,
                    "id": "adsf2",
                    "value": Object {
                      "channelStatus": "GOOD",
                      "onContextMenus": Object {
                        "onContextMenuBar": [Function],
                        "onContextMenuBarLabel": [Function],
                      },
                      "quietDurationMs": undefined,
                      "quietUntilMs": 1,
                      "x": "adsf2",
                      "y": 10,
                    },
                  },
                ]
              }
              categories={
                Object {
                  "x": Array [
                    "adsf",
                    "adsf2",
                  ],
                  "y": Array [],
                }
              }
              classNames="table-display"
              dataComponent={[Function]}
              disabled={
                Object {
                  "xTicks": Object {
                    "disabledColor": "#fff",
                    "disabledCondition": [Function],
                  },
                }
              }
              id="bar-chart-LAG"
              maxBarWidth={150}
              minBarWidth={25}
              onContextMenuBar={[Function]}
              onContextMenuBarLabel={[Function]}
              padding={
                Object {
                  "bottom": 120,
                  "left": 63,
                  "right": 29,
                  "top": 16,
                }
              }
              scrollBrushColor="#fff"
              thresholdsBad={
                Array [
                  3,
                  3,
                ]
              }
              thresholdsMarginal={
                Array [
                  3,
                  3,
                ]
              }
              xAxisLabel="Channel Name"
              xTickFormat={[Function]}
              xTickTooltips={
                Array [
                  "10",
                  "10",
                ]
              }
              yAxisLabel="Lag (s)"
              yTickFormat={[Function]}
            >
              <div
                className="core-chart table-display"
              >
                <VictoryChart
                  animate={false}
                  backgroundComponent={
                    <Background
                      circleComponent={<Circle />}
                      rectComponent={<Rect />}
                      role="presentation"
                      shapeRendering="auto"
                    />
                  }
                  containerComponent={
                    <VictoryContainer
                      className="VictoryContainer"
                      portalComponent={<Portal />}
                      portalZIndex={99}
                      responsive={true}
                    />
                  }
                  defaultAxes={
                    Object {
                      "dependent": <VictoryAxis
                        axisComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="axis"
                          />
                        }
                        axisLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                        containerComponent={
                          <VictoryContainer
                            className="VictoryContainer"
                            portalComponent={<Portal />}
                            portalZIndex={99}
                            responsive={true}
                          />
                        }
                        dependentAxis={true}
                        fixLabelOverlap={false}
                        gridComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="grid"
                          />
                        }
                        groupComponent={
                          <g
                            role="presentation"
                          />
                        }
                        standalone={true}
                        theme={
                          Object {
                            "area": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "axis": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "axis": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeLinecap": "round",
                                  "strokeLinejoin": "round",
                                  "strokeWidth": 1,
                                },
                                "axisLabel": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 25,
                                  "stroke": "transparent",
                                  "textAnchor": "middle",
                                },
                                "grid": Object {
                                  "fill": "none",
                                  "pointerEvents": "painted",
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "fill": "transparent",
                                  "size": 1,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "bar": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                  "padding": 8,
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "boxplot": Object {
                              "boxWidth": 20,
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "max": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "maxLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "median": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "medianLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "min": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "minLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "q1": Object {
                                  "fill": "#969696",
                                  "padding": 8,
                                },
                                "q1Labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "q3": Object {
                                  "fill": "#969696",
                                  "padding": 8,
                                },
                                "q3Labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "candlestick": Object {
                              "candleColors": Object {
                                "negative": "#252525",
                                "positive": "#ffffff",
                              },
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "chart": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "errorbar": Object {
                              "borderWidth": 8,
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "group": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "histogram": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#969696",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "legend": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "gutter": 10,
                              "orientation": "vertical",
                              "style": Object {
                                "data": Object {
                                  "type": "circle",
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "title": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "stroke": "transparent",
                                },
                              },
                              "titleOrientation": "top",
                            },
                            "line": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "pie": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 400,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "padding": 10,
                                  "stroke": "transparent",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 20,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 400,
                            },
                            "scatter": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                  "stroke": "transparent",
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "stack": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "tooltip": Object {
                              "cornerRadius": 5,
                              "flyoutPadding": 5,
                              "flyoutStyle": Object {
                                "fill": "#f0f0f0",
                                "pointerEvents": "none",
                                "stroke": "#252525",
                                "strokeWidth": 1,
                              },
                              "pointerLength": 10,
                              "style": Object {
                                "fill": "#252525",
                                "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 0,
                                "pointerEvents": "none",
                                "stroke": "transparent",
                              },
                            },
                            "voronoi": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "transparent",
                                  "strokeWidth": 0,
                                },
                                "flyout": Object {
                                  "fill": "#f0f0f0",
                                  "pointerEvents": "none",
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "pointerEvents": "none",
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                          }
                        }
                        tickComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="tick"
                          />
                        }
                        tickLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                      />,
                      "independent": <VictoryAxis
                        axisComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="axis"
                          />
                        }
                        axisLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                        containerComponent={
                          <VictoryContainer
                            className="VictoryContainer"
                            portalComponent={<Portal />}
                            portalZIndex={99}
                            responsive={true}
                          />
                        }
                        fixLabelOverlap={false}
                        gridComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="grid"
                          />
                        }
                        groupComponent={
                          <g
                            role="presentation"
                          />
                        }
                        standalone={true}
                        theme={
                          Object {
                            "area": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "axis": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "axis": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeLinecap": "round",
                                  "strokeLinejoin": "round",
                                  "strokeWidth": 1,
                                },
                                "axisLabel": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 25,
                                  "stroke": "transparent",
                                  "textAnchor": "middle",
                                },
                                "grid": Object {
                                  "fill": "none",
                                  "pointerEvents": "painted",
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "fill": "transparent",
                                  "size": 1,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "bar": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                  "padding": 8,
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "boxplot": Object {
                              "boxWidth": 20,
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "max": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "maxLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "median": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "medianLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "min": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "minLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "q1": Object {
                                  "fill": "#969696",
                                  "padding": 8,
                                },
                                "q1Labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "q3": Object {
                                  "fill": "#969696",
                                  "padding": 8,
                                },
                                "q3Labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "candlestick": Object {
                              "candleColors": Object {
                                "negative": "#252525",
                                "positive": "#ffffff",
                              },
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "chart": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "errorbar": Object {
                              "borderWidth": 8,
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "group": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "histogram": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#969696",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "legend": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "gutter": 10,
                              "orientation": "vertical",
                              "style": Object {
                                "data": Object {
                                  "type": "circle",
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "title": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "stroke": "transparent",
                                },
                              },
                              "titleOrientation": "top",
                            },
                            "line": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "pie": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 400,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "padding": 10,
                                  "stroke": "transparent",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 20,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 400,
                            },
                            "scatter": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                  "stroke": "transparent",
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "stack": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "tooltip": Object {
                              "cornerRadius": 5,
                              "flyoutPadding": 5,
                              "flyoutStyle": Object {
                                "fill": "#f0f0f0",
                                "pointerEvents": "none",
                                "stroke": "#252525",
                                "strokeWidth": 1,
                              },
                              "pointerLength": 10,
                              "style": Object {
                                "fill": "#252525",
                                "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 0,
                                "pointerEvents": "none",
                                "stroke": "transparent",
                              },
                            },
                            "voronoi": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "transparent",
                                  "strokeWidth": 0,
                                },
                                "flyout": Object {
                                  "fill": "#f0f0f0",
                                  "pointerEvents": "none",
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "pointerEvents": "none",
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                          }
                        }
                        tickComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="tick"
                          />
                        }
                        tickLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                      />,
                    }
                  }
                  defaultPolarAxes={
                    Object {
                      "dependent": <VictoryAxis
                        axisComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="axis"
                          />
                        }
                        axisLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                        circularAxisComponent={
                          <Arc
                            pathComponent={<Path />}
                            role="presentation"
                            shapeRendering="auto"
                            type="axis"
                          />
                        }
                        circularGridComponent={
                          <Arc
                            pathComponent={<Path />}
                            role="presentation"
                            shapeRendering="auto"
                            type="grid"
                          />
                        }
                        containerComponent={
                          <VictoryContainer
                            className="VictoryContainer"
                            portalComponent={<Portal />}
                            portalZIndex={99}
                            responsive={true}
                          />
                        }
                        dependentAxis={true}
                        endAngle={360}
                        gridComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="grid"
                          />
                        }
                        groupComponent={
                          <g
                            role="presentation"
                          />
                        }
                        labelPlacement="parallel"
                        standalone={true}
                        startAngle={0}
                        theme={
                          Object {
                            "area": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "axis": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "axis": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeLinecap": "round",
                                  "strokeLinejoin": "round",
                                  "strokeWidth": 1,
                                },
                                "axisLabel": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 25,
                                  "stroke": "transparent",
                                  "textAnchor": "middle",
                                },
                                "grid": Object {
                                  "fill": "none",
                                  "pointerEvents": "painted",
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "fill": "transparent",
                                  "size": 1,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "bar": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                  "padding": 8,
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "boxplot": Object {
                              "boxWidth": 20,
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "max": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "maxLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "median": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "medianLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "min": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "minLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "q1": Object {
                                  "fill": "#969696",
                                  "padding": 8,
                                },
                                "q1Labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "q3": Object {
                                  "fill": "#969696",
                                  "padding": 8,
                                },
                                "q3Labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "candlestick": Object {
                              "candleColors": Object {
                                "negative": "#252525",
                                "positive": "#ffffff",
                              },
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "chart": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "errorbar": Object {
                              "borderWidth": 8,
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "group": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "histogram": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#969696",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "legend": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "gutter": 10,
                              "orientation": "vertical",
                              "style": Object {
                                "data": Object {
                                  "type": "circle",
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "title": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "stroke": "transparent",
                                },
                              },
                              "titleOrientation": "top",
                            },
                            "line": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "pie": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 400,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "padding": 10,
                                  "stroke": "transparent",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 20,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 400,
                            },
                            "scatter": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                  "stroke": "transparent",
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "stack": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "tooltip": Object {
                              "cornerRadius": 5,
                              "flyoutPadding": 5,
                              "flyoutStyle": Object {
                                "fill": "#f0f0f0",
                                "pointerEvents": "none",
                                "stroke": "#252525",
                                "strokeWidth": 1,
                              },
                              "pointerLength": 10,
                              "style": Object {
                                "fill": "#252525",
                                "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 0,
                                "pointerEvents": "none",
                                "stroke": "transparent",
                              },
                            },
                            "voronoi": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "transparent",
                                  "strokeWidth": 0,
                                },
                                "flyout": Object {
                                  "fill": "#f0f0f0",
                                  "pointerEvents": "none",
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "pointerEvents": "none",
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                          }
                        }
                        tickComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="tick"
                          />
                        }
                        tickLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                      />,
                      "independent": <VictoryAxis
                        axisComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="axis"
                          />
                        }
                        axisLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                        circularAxisComponent={
                          <Arc
                            pathComponent={<Path />}
                            role="presentation"
                            shapeRendering="auto"
                            type="axis"
                          />
                        }
                        circularGridComponent={
                          <Arc
                            pathComponent={<Path />}
                            role="presentation"
                            shapeRendering="auto"
                            type="grid"
                          />
                        }
                        containerComponent={
                          <VictoryContainer
                            className="VictoryContainer"
                            portalComponent={<Portal />}
                            portalZIndex={99}
                            responsive={true}
                          />
                        }
                        endAngle={360}
                        gridComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="grid"
                          />
                        }
                        groupComponent={
                          <g
                            role="presentation"
                          />
                        }
                        labelPlacement="parallel"
                        standalone={true}
                        startAngle={0}
                        theme={
                          Object {
                            "area": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "axis": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "axis": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeLinecap": "round",
                                  "strokeLinejoin": "round",
                                  "strokeWidth": 1,
                                },
                                "axisLabel": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 25,
                                  "stroke": "transparent",
                                  "textAnchor": "middle",
                                },
                                "grid": Object {
                                  "fill": "none",
                                  "pointerEvents": "painted",
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "fill": "transparent",
                                  "size": 1,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "bar": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                  "padding": 8,
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "boxplot": Object {
                              "boxWidth": 20,
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "max": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "maxLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "median": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "medianLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "min": Object {
                                  "padding": 8,
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "minLabels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "q1": Object {
                                  "fill": "#969696",
                                  "padding": 8,
                                },
                                "q1Labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                                "q3": Object {
                                  "fill": "#969696",
                                  "padding": 8,
                                },
                                "q3Labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 3,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "candlestick": Object {
                              "candleColors": Object {
                                "negative": "#252525",
                                "positive": "#ffffff",
                              },
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "chart": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "errorbar": Object {
                              "borderWidth": 8,
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "group": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "histogram": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#969696",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "legend": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "gutter": 10,
                              "orientation": "vertical",
                              "style": Object {
                                "data": Object {
                                  "type": "circle",
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "title": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "stroke": "transparent",
                                },
                              },
                              "titleOrientation": "top",
                            },
                            "line": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "#252525",
                                  "strokeWidth": 2,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "pie": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 400,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "padding": 10,
                                  "stroke": "transparent",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 20,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 400,
                            },
                            "scatter": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "#252525",
                                  "stroke": "transparent",
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                            "stack": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "width": 450,
                            },
                            "tooltip": Object {
                              "cornerRadius": 5,
                              "flyoutPadding": 5,
                              "flyoutStyle": Object {
                                "fill": "#f0f0f0",
                                "pointerEvents": "none",
                                "stroke": "#252525",
                                "strokeWidth": 1,
                              },
                              "pointerLength": 10,
                              "style": Object {
                                "fill": "#252525",
                                "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 0,
                                "pointerEvents": "none",
                                "stroke": "transparent",
                              },
                            },
                            "voronoi": Object {
                              "colorScale": Array [
                                "#252525",
                                "#525252",
                                "#737373",
                                "#969696",
                                "#bdbdbd",
                                "#d9d9d9",
                                "#f0f0f0",
                              ],
                              "height": 300,
                              "padding": 50,
                              "style": Object {
                                "data": Object {
                                  "fill": "transparent",
                                  "stroke": "transparent",
                                  "strokeWidth": 0,
                                },
                                "flyout": Object {
                                  "fill": "#f0f0f0",
                                  "pointerEvents": "none",
                                  "stroke": "#252525",
                                  "strokeWidth": 1,
                                },
                                "labels": Object {
                                  "fill": "#252525",
                                  "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 5,
                                  "pointerEvents": "none",
                                  "stroke": "transparent",
                                },
                              },
                              "width": 450,
                            },
                          }
                        }
                        tickComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="tick"
                          />
                        }
                        tickLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                      />,
                    }
                  }
                  domainPadding={
                    Object {
                      "x": NaN,
                    }
                  }
                  groupComponent={<g />}
                  height={NaN}
                  key="bar-chart-LAG"
                  padding={
                    Object {
                      "bottom": 120,
                      "left": 63,
                      "right": 29,
                      "top": 16,
                    }
                  }
                  standalone={true}
                  style={
                    Object {
                      "parent": Object {
                        "height": NaN,
                      },
                    }
                  }
                  theme={
                    Object {
                      "axis": Object {
                        "style": Object {
                          "axis": Object {
                            "offset": 14,
                            "stroke": "var(--core-prominent)",
                            "strokeWidth": 1,
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                        },
                      },
                      "bar": Object {
                        "style": Object {
                          "data": Object {
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "var(--core-prominent)",
                            "fontFamily": "var(--core-sans)",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 14,
                            "stroke": "transparent",
                          },
                        },
                      },
                      "dependentAxis": Object {
                        "style": Object {
                          "axis": Object {
                            "offsetInlineStart": 16,
                            "stroke": "var(--core-soft)",
                            "strokeWidth": 1,
                          },
                          "grid": Object {
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "var(--core-main)",
                            "fontFamily": "var(--core-sans)",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "size": 4,
                            "stroke": "var(--core-main)",
                            "strokeWidth": 1,
                          },
                        },
                      },
                      "independentAxis": Object {
                        "style": Object {
                          "axis": Object {
                            "offsetInlineStart": 16,
                            "stroke": "var(--core-soft)",
                            "strokeWidth": 1,
                          },
                          "grid": Object {
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "var(--core-main)",
                            "fontFamily": "var(--core-sans)",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "size": 4,
                            "stroke": "var(--core-main)",
                            "strokeWidth": 1,
                          },
                        },
                      },
                    }
                  }
                >
                  <VictoryContainer
                    className="VictoryContainer"
                    domain={
                      Object {
                        "x": Array [
                          1,
                          2,
                        ],
                        "y": Array [
                          0,
                          10.0000000001,
                        ],
                      }
                    }
                    height={NaN}
                    portalComponent={<Portal />}
                    portalZIndex={99}
                    responsive={true}
                    scale={
                      Object {
                        "x": [Function],
                        "y": [Function],
                      }
                    }
                    standalone={true}
                    style={
                      Object {
                        "height": NaN,
                        "userSelect": "none",
                        "width": "100%",
                      }
                    }
                    theme={
                      Object {
                        "axis": Object {
                          "style": Object {
                            "axis": Object {
                              "offset": 14,
                              "stroke": "var(--core-prominent)",
                              "strokeWidth": 1,
                            },
                            "grid": Object {
                              "fill": "none",
                              "pointerEvents": "painted",
                              "stroke": "none",
                            },
                          },
                        },
                        "bar": Object {
                          "style": Object {
                            "data": Object {
                              "padding": 8,
                              "strokeWidth": 0,
                            },
                            "labels": Object {
                              "fill": "var(--core-prominent)",
                              "fontFamily": "var(--core-sans)",
                              "fontSize": 14,
                              "letterSpacing": "normal",
                              "padding": 14,
                              "stroke": "transparent",
                            },
                          },
                        },
                        "dependentAxis": Object {
                          "style": Object {
                            "axis": Object {
                              "offsetInlineStart": 16,
                              "stroke": "var(--core-soft)",
                              "strokeWidth": 1,
                            },
                            "grid": Object {
                              "stroke": "none",
                            },
                            "tickLabels": Object {
                              "fill": "var(--core-main)",
                              "fontFamily": "var(--core-sans)",
                              "fontSize": 14,
                              "letterSpacing": "normal",
                              "padding": 10,
                              "stroke": "transparent",
                            },
                            "ticks": Object {
                              "size": 4,
                              "stroke": "var(--core-main)",
                              "strokeWidth": 1,
                            },
                          },
                        },
                        "independentAxis": Object {
                          "style": Object {
                            "axis": Object {
                              "offsetInlineStart": 16,
                              "stroke": "var(--core-soft)",
                              "strokeWidth": 1,
                            },
                            "grid": Object {
                              "stroke": "none",
                            },
                            "tickLabels": Object {
                              "fill": "var(--core-main)",
                              "fontFamily": "var(--core-sans)",
                              "fontSize": 14,
                              "letterSpacing": "normal",
                              "padding": 10,
                              "stroke": "transparent",
                            },
                            "ticks": Object {
                              "size": 4,
                              "stroke": "var(--core-main)",
                              "strokeWidth": 1,
                            },
                          },
                        },
                      }
                    }
                    width={450}
                  >
                    <div
                      className="VictoryContainer"
                      style={
                        Object {
                          "height": NaN,
                          "pointerEvents": "none",
                          "position": "relative",
                          "touchAction": "none",
                          "userSelect": "none",
                          "width": "100%",
                        }
                      }
                    >
                      <svg
                        height={NaN}
                        role="img"
                        style={
                          Object {
                            "height": "auto",
                            "pointerEvents": "all",
                            "width": "100%",
                          }
                        }
                        viewBox="0 0 450 NaN"
                        width={450}
                      >
                        <VictoryAxis
                          axisComponent={
                            <LineSegment
                              lineComponent={<Line />}
                              role="presentation"
                              shapeRendering="auto"
                              type="axis"
                            />
                          }
                          axisLabelComponent={
                            <VictoryLabel
                              backgroundComponent={<Rect />}
                              capHeight={0.71}
                              direction="inherit"
                              groupComponent={<g />}
                              lineHeight={1}
                              textComponent={<Text />}
                              tspanComponent={<TSpan />}
                            />
                          }
                          categories={
                            Object {
                              "x": Array [
                                "adsf",
                                "adsf2",
                              ],
                              "y": undefined,
                            }
                          }
                          containerComponent={
                            <VictoryContainer
                              className="VictoryContainer"
                              portalComponent={<Portal />}
                              portalZIndex={99}
                              responsive={true}
                            />
                          }
                          crossAxis={true}
                          domain={
                            Object {
                              "x": Array [
                                1,
                                2,
                              ],
                              "y": Array [
                                0,
                                10.0000000001,
                              ],
                            }
                          }
                          fixLabelOverlap={false}
                          gridComponent={
                            <LineSegment
                              lineComponent={<Line />}
                              role="presentation"
                              shapeRendering="auto"
                              type="grid"
                            />
                          }
                          groupComponent={
                            <g
                              role="presentation"
                            />
                          }
                          height={NaN}
                          key="chart-axis-0-key-0"
                          name="chart-axis-0"
                          offsetX={63}
                          offsetY={120}
                          orientation="bottom"
                          padding={
                            Object {
                              "bottom": 120,
                              "left": 63,
                              "right": 29,
                              "top": 16,
                            }
                          }
                          scale={
                            Object {
                              "x": [Function],
                              "y": [Function],
                            }
                          }
                          standalone={false}
                          stringMap={
                            Object {
                              "x": Object {
                                "adsf": 1,
                                "adsf2": 2,
                              },
                              "y": null,
                            }
                          }
                          style={
                            Object {
                              "axis": Object {
                                "stroke": "none",
                              },
                              "parent": Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              },
                              "tickLabels": Object {
                                "fill": "none",
                              },
                              "ticks": Object {
                                "stroke": "none",
                              },
                            }
                          }
                          theme={
                            Object {
                              "axis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offset": 14,
                                    "stroke": "var(--core-prominent)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "fill": "none",
                                    "pointerEvents": "painted",
                                    "stroke": "none",
                                  },
                                },
                              },
                              "bar": Object {
                                "style": Object {
                                  "data": Object {
                                    "padding": 8,
                                    "strokeWidth": 0,
                                  },
                                  "labels": Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 14,
                                    "stroke": "transparent",
                                  },
                                },
                              },
                              "dependentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                              "independentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                            }
                          }
                          tickComponent={
                            <LineSegment
                              lineComponent={<Line />}
                              role="presentation"
                              shapeRendering="auto"
                              type="tick"
                            />
                          }
                          tickLabelComponent={
                            <VictoryLabel
                              backgroundComponent={<Rect />}
                              capHeight={0.71}
                              direction="inherit"
                              groupComponent={<g />}
                              lineHeight={1}
                              textComponent={<Text />}
                              tspanComponent={<TSpan />}
                            />
                          }
                          width={450}
                        >
                          <g
                            role="presentation"
                          >
                            <LineSegment
                              dimension="x"
                              id="chart-axis-0-axis-0"
                              index={0}
                              key="chart-axis-0-axis-0"
                              lineComponent={<Line />}
                              role="presentation"
                              scale={
                                Object {
                                  "x": [Function],
                                }
                              }
                              shapeRendering="auto"
                              style={
                                Object {
                                  "offsetInlineStart": 16,
                                  "stroke": "none",
                                  "strokeWidth": 1,
                                }
                              }
                              ticks={
                                Array [
                                  1,
                                  2,
                                ]
                              }
                              type="axis"
                              x1={63}
                              x2={421}
                              y1={NaN}
                              y2={NaN}
                            >
                              <Line
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "none",
                                    "strokeWidth": 1,
                                  }
                                }
                                x1={63}
                                x2={421}
                                y1={NaN}
                                y2={NaN}
                              >
                                <line
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "none",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  vectorEffect="non-scaling-stroke"
                                  x1={63}
                                  x2={421}
                                  y1={NaN}
                                  y2={NaN}
                                />
                              </Line>
                            </LineSegment>
                            <g
                              key="chart-axis-0-tick-group-0"
                              role="presentation"
                            >
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                datum={1}
                                direction="inherit"
                                groupComponent={<g />}
                                id="chart-axis-0-tickLabels-0"
                                index={0}
                                key="chart-axis-0-tickLabels-0"
                                lineHeight={1}
                                scale={
                                  Object {
                                    "x": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "none",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  }
                                }
                                text="adsf"
                                textAnchor="middle"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    1,
                                    2,
                                  ]
                                }
                                tspanComponent={<TSpan />}
                                verticalAnchor="start"
                                x={63}
                                y={NaN}
                              >
                                <Text
                                  direction="inherit"
                                  dx={0}
                                  id="chart-axis-0-tickLabels-0"
                                  key="text"
                                  x={63}
                                  y={NaN}
                                >
                                  <text
                                    direction="inherit"
                                    dx={0}
                                    id="chart-axis-0-tickLabels-0"
                                    x={63}
                                    y={NaN}
                                  >
                                    <TSpan
                                      dx={0}
                                      dy={0}
                                      key="chart-axis-0-tickLabels-0-key-0"
                                      style={
                                        Object {
                                          "fill": "none",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="middle"
                                      x={63}
                                    >
                                      <tspan
                                        dx={0}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "none",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 14,
                                            "letterSpacing": "normal",
                                            "padding": 10,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="middle"
                                        x={63}
                                      >
                                        adsf
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                            </g>
                            <g
                              key="chart-axis-0-tick-group-1"
                              role="presentation"
                            >
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                datum={2}
                                direction="inherit"
                                groupComponent={<g />}
                                id="chart-axis-0-tickLabels-1"
                                index={1}
                                key="chart-axis-0-tickLabels-1"
                                lineHeight={1}
                                scale={
                                  Object {
                                    "x": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "none",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  }
                                }
                                text="adsf2"
                                textAnchor="middle"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    1,
                                    2,
                                  ]
                                }
                                tspanComponent={<TSpan />}
                                verticalAnchor="start"
                                x={421}
                                y={NaN}
                              >
                                <Text
                                  direction="inherit"
                                  dx={0}
                                  id="chart-axis-0-tickLabels-1"
                                  key="text"
                                  x={421}
                                  y={NaN}
                                >
                                  <text
                                    direction="inherit"
                                    dx={0}
                                    id="chart-axis-0-tickLabels-1"
                                    x={421}
                                    y={NaN}
                                  >
                                    <TSpan
                                      dx={0}
                                      dy={0}
                                      key="chart-axis-0-tickLabels-1-key-0"
                                      style={
                                        Object {
                                          "fill": "none",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="middle"
                                      x={421}
                                    >
                                      <tspan
                                        dx={0}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "none",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 14,
                                            "letterSpacing": "normal",
                                            "padding": 10,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="middle"
                                        x={421}
                                      >
                                        adsf2
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                            </g>
                          </g>
                        </VictoryAxis>
                        <Component
                          barDefs={
                            Array [
                              Object {
                                "color": undefined,
                                "id": "adsf",
                                "value": Object {
                                  "channelStatus": "GOOD",
                                  "onContextMenus": Object {
                                    "onContextMenuBar": [Function],
                                    "onContextMenuBarLabel": [Function],
                                  },
                                  "quietDurationMs": undefined,
                                  "quietUntilMs": 1,
                                  "x": "adsf",
                                  "y": 10,
                                },
                              },
                              Object {
                                "color": undefined,
                                "id": "adsf2",
                                "value": Object {
                                  "channelStatus": "GOOD",
                                  "onContextMenus": Object {
                                    "onContextMenuBar": [Function],
                                    "onContextMenuBarLabel": [Function],
                                  },
                                  "quietDurationMs": undefined,
                                  "quietUntilMs": 1,
                                  "x": "adsf2",
                                  "y": 10,
                                },
                              },
                            ]
                          }
                          categories={
                            Object {
                              "x": Array [
                                "adsf",
                                "adsf2",
                              ],
                              "y": undefined,
                            }
                          }
                          classNames="table-display"
                          dataComponent={[Function]}
                          disabled={
                            Object {
                              "xTicks": Object {
                                "disabledColor": "#fff",
                                "disabledCondition": [Function],
                              },
                            }
                          }
                          domain={
                            Object {
                              "x": Array [
                                1,
                                2,
                              ],
                              "y": Array [
                                0,
                                10.0000000001,
                              ],
                            }
                          }
                          height={NaN}
                          id="bar-chart-LAG"
                          key="chart-undefined-1-key-1"
                          maxBarWidth={150}
                          minBarWidth={25}
                          name="chart-undefined-1"
                          onContextMenuBar={[Function]}
                          onContextMenuBarLabel={[Function]}
                          padding={
                            Object {
                              "bottom": 120,
                              "left": 63,
                              "right": 29,
                              "top": 16,
                            }
                          }
                          range={
                            Object {
                              "x": Array [
                                63,
                                421,
                              ],
                              "y": Array [
                                NaN,
                                16,
                              ],
                            }
                          }
                          rotateAxis={true}
                          scale={
                            Object {
                              "x": [Function],
                              "y": [Function],
                            }
                          }
                          scrollBrushColor="#fff"
                          standalone={false}
                          stringMap={
                            Object {
                              "x": Object {
                                "adsf": 1,
                                "adsf2": 2,
                              },
                              "y": null,
                            }
                          }
                          style={
                            Object {
                              "parent": Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              },
                            }
                          }
                          theme={
                            Object {
                              "axis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offset": 14,
                                    "stroke": "var(--core-prominent)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "fill": "none",
                                    "pointerEvents": "painted",
                                    "stroke": "none",
                                  },
                                },
                              },
                              "bar": Object {
                                "style": Object {
                                  "data": Object {
                                    "padding": 8,
                                    "strokeWidth": 0,
                                  },
                                  "labels": Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 14,
                                    "stroke": "transparent",
                                  },
                                },
                              },
                              "dependentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                              "independentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                            }
                          }
                          thresholdsBad={
                            Array [
                              3,
                              3,
                            ]
                          }
                          thresholdsMarginal={
                            Array [
                              3,
                              3,
                            ]
                          }
                          width={450}
                          xAxisLabel="Channel Name"
                          xTickFormat={[Function]}
                          xTickTooltips={
                            Array [
                              "10",
                              "10",
                            ]
                          }
                          yAxisLabel="Lag (s)"
                          yTickFormat={[Function]}
                        >
                          <VictoryAxis
                            axisComponent={
                              <LineSegment
                                lineComponent={<Line />}
                                role="presentation"
                                shapeRendering="auto"
                                type="axis"
                              />
                            }
                            axisLabelComponent={
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                direction="inherit"
                                groupComponent={<g />}
                                lineHeight={1}
                                textComponent={<Text />}
                                tspanComponent={<TSpan />}
                              />
                            }
                            barDefs={
                              Array [
                                Object {
                                  "color": undefined,
                                  "id": "adsf",
                                  "value": Object {
                                    "channelStatus": "GOOD",
                                    "onContextMenus": Object {
                                      "onContextMenuBar": [Function],
                                      "onContextMenuBarLabel": [Function],
                                    },
                                    "quietDurationMs": undefined,
                                    "quietUntilMs": 1,
                                    "x": "adsf",
                                    "y": 10,
                                  },
                                },
                                Object {
                                  "color": undefined,
                                  "id": "adsf2",
                                  "value": Object {
                                    "channelStatus": "GOOD",
                                    "onContextMenus": Object {
                                      "onContextMenuBar": [Function],
                                      "onContextMenuBarLabel": [Function],
                                    },
                                    "quietDurationMs": undefined,
                                    "quietUntilMs": 1,
                                    "x": "adsf2",
                                    "y": 10,
                                  },
                                },
                              ]
                            }
                            categories={
                              Object {
                                "x": Array [
                                  "adsf",
                                  "adsf2",
                                ],
                                "y": undefined,
                              }
                            }
                            classNames="table-display"
                            containerComponent={
                              <VictoryContainer
                                className="VictoryContainer"
                                portalComponent={<Portal />}
                                portalZIndex={99}
                                responsive={true}
                              />
                            }
                            dataComponent={[Function]}
                            dependentAxis={false}
                            disabled={
                              Object {
                                "xTicks": Object {
                                  "disabledColor": "#fff",
                                  "disabledCondition": [Function],
                                },
                              }
                            }
                            domain={
                              Object {
                                "x": Array [
                                  1,
                                  2,
                                ],
                                "y": Array [
                                  0,
                                  10.0000000001,
                                ],
                              }
                            }
                            fixLabelOverlap={false}
                            gridComponent={
                              <LineSegment
                                lineComponent={<Line />}
                                role="presentation"
                                shapeRendering="auto"
                                type="grid"
                              />
                            }
                            groupComponent={
                              <g
                                role="presentation"
                              />
                            }
                            height={NaN}
                            id="bar-chart-LAG"
                            label="Channel Name"
                            maxBarWidth={150}
                            minBarWidth={25}
                            name="chart-undefined-1"
                            onContextMenuBar={[Function]}
                            onContextMenuBarLabel={[Function]}
                            padding={
                              Object {
                                "bottom": 120,
                                "left": 63,
                                "right": 29,
                                "top": 16,
                              }
                            }
                            range={
                              Object {
                                "x": Array [
                                  63,
                                  421,
                                ],
                                "y": Array [
                                  NaN,
                                  16,
                                ],
                              }
                            }
                            rotateAxis={true}
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            scrollBrushColor="#fff"
                            standalone={false}
                            stringMap={
                              Object {
                                "x": Object {
                                  "adsf": 1,
                                  "adsf2": 2,
                                },
                                "y": null,
                              }
                            }
                            style={
                              Object {
                                "axisLabel": Object {
                                  "fill": "var(--core-prominent)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 82,
                                  "stroke": "transparent",
                                },
                                "tickLabels": Object {
                                  "angle": -65,
                                  "fontSize": 10,
                                },
                              }
                            }
                            theme={
                              Object {
                                "axis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offset": 14,
                                      "stroke": "var(--core-prominent)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "fill": "none",
                                      "pointerEvents": "painted",
                                      "stroke": "none",
                                    },
                                  },
                                },
                                "bar": Object {
                                  "style": Object {
                                    "data": Object {
                                      "padding": 8,
                                      "strokeWidth": 0,
                                    },
                                    "labels": Object {
                                      "fill": "var(--core-prominent)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 14,
                                      "stroke": "transparent",
                                    },
                                  },
                                },
                                "dependentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                                "independentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                              }
                            }
                            thresholdsBad={
                              Array [
                                3,
                                3,
                              ]
                            }
                            thresholdsMarginal={
                              Array [
                                3,
                                3,
                              ]
                            }
                            tickComponent={
                              <LineSegment
                                lineComponent={<Line />}
                                role="presentation"
                                shapeRendering="auto"
                                type="tick"
                              />
                            }
                            tickFormat={[Function]}
                            tickLabelComponent={
                              <Label
                                disabledColor="#fff"
                                dx={-25}
                                dy={-10}
                                onContextMenuBarLabel={[Function]}
                                xLabelInfoMap={
                                  Immutable.Map {
                                    "● adsf": Object {
                                      "isDisabled": false,
                                      "tooltip": "10",
                                    },
                                    "● adsf2": Object {
                                      "isDisabled": false,
                                      "tooltip": "10",
                                    },
                                  }
                                }
                              />
                            }
                            width={450}
                            xAxisLabel="Channel Name"
                            xTickFormat={[Function]}
                            xTickTooltips={
                              Array [
                                "10",
                                "10",
                              ]
                            }
                            yAxisLabel="Lag (s)"
                            yTickFormat={[Function]}
                          >
                            <g
                              role="presentation"
                            >
                              <LineSegment
                                dimension="x"
                                id="chart-undefined-1-axis-0"
                                index={0}
                                key="chart-undefined-1-axis-0"
                                lineComponent={<Line />}
                                role="presentation"
                                scale={
                                  Object {
                                    "x": [Function],
                                  }
                                }
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  }
                                }
                                ticks={
                                  Array [
                                    1,
                                    2,
                                  ]
                                }
                                type="axis"
                                x1={63}
                                x2={421}
                                y1={NaN}
                                y2={NaN}
                              >
                                <Line
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  x1={63}
                                  x2={421}
                                  y1={NaN}
                                  y2={NaN}
                                >
                                  <line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "offsetInlineStart": 16,
                                        "stroke": "var(--core-soft)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    vectorEffect="non-scaling-stroke"
                                    x1={63}
                                    x2={421}
                                    y1={NaN}
                                    y2={NaN}
                                  />
                                </Line>
                              </LineSegment>
                              <VictoryLabel
                                angle={0}
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                direction="inherit"
                                groupComponent={<g />}
                                id="chart-undefined-1-axisLabel-0"
                                index={0}
                                key="chart-undefined-1-axisLabel-0"
                                lineHeight={1}
                                scale={
                                  Object {
                                    "x": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 82,
                                    "stroke": "transparent",
                                  }
                                }
                                text="Channel Name"
                                textAnchor="middle"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    1,
                                    2,
                                  ]
                                }
                                tspanComponent={<TSpan />}
                                verticalAnchor="start"
                                x={242}
                                y={NaN}
                              >
                                <Text
                                  direction="inherit"
                                  dx={0}
                                  id="chart-undefined-1-axisLabel-0"
                                  key="text"
                                  x={242}
                                  y={NaN}
                                >
                                  <text
                                    direction="inherit"
                                    dx={0}
                                    id="chart-undefined-1-axisLabel-0"
                                    x={242}
                                    y={NaN}
                                  >
                                    <TSpan
                                      dx={0}
                                      dy={0}
                                      key="chart-undefined-1-axisLabel-0-key-0"
                                      style={
                                        Object {
                                          "fill": "var(--core-prominent)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 82,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="middle"
                                      x={242}
                                    >
                                      <tspan
                                        dx={0}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "var(--core-prominent)",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 14,
                                            "letterSpacing": "normal",
                                            "padding": 82,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="middle"
                                        x={242}
                                      >
                                        Channel Name
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                              <g
                                key="chart-undefined-1-tick-group-0"
                                role="presentation"
                              >
                                <LineSegment
                                  datum={1}
                                  id="chart-undefined-1-ticks-0"
                                  index={0}
                                  key="chart-undefined-1-ticks-0"
                                  lineComponent={<Line />}
                                  role="presentation"
                                  scale={
                                    Object {
                                      "x": [Function],
                                    }
                                  }
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  ticks={
                                    Array [
                                      1,
                                      2,
                                    ]
                                  }
                                  type="tick"
                                  x1={63}
                                  x2={63}
                                  y1={NaN}
                                  y2={NaN}
                                >
                                  <Line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "size": 4,
                                        "stroke": "var(--core-main)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    x1={63}
                                    x2={63}
                                    y1={NaN}
                                    y2={NaN}
                                  >
                                    <line
                                      role="presentation"
                                      shapeRendering="auto"
                                      style={
                                        Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        }
                                      }
                                      vectorEffect="non-scaling-stroke"
                                      x1={63}
                                      x2={63}
                                      y1={NaN}
                                      y2={NaN}
                                    />
                                  </Line>
                                </LineSegment>
                                <Label
                                  angle={-65}
                                  datum={1}
                                  disabledColor="#fff"
                                  dx={-25}
                                  dy={-10}
                                  id="chart-undefined-1-tickLabels-0"
                                  index={0}
                                  key="chart-undefined-1-tickLabels-0"
                                  onContextMenuBarLabel={[Function]}
                                  scale={
                                    Object {
                                      "x": [Function],
                                    }
                                  }
                                  style={
                                    Object {
                                      "angle": -65,
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 10,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    }
                                  }
                                  text="● adsf"
                                  textAnchor="middle"
                                  ticks={
                                    Array [
                                      1,
                                      2,
                                    ]
                                  }
                                  verticalAnchor="start"
                                  x={63}
                                  xLabelInfoMap={
                                    Immutable.Map {
                                      "● adsf": Object {
                                        "isDisabled": false,
                                        "tooltip": "10",
                                      },
                                      "● adsf2": Object {
                                        "isDisabled": false,
                                        "tooltip": "10",
                                      },
                                    }
                                  }
                                  y={NaN}
                                >
                                  <VictoryLabel
                                    angle={-65}
                                    backgroundComponent={<Rect />}
                                    capHeight={0.71}
                                    datum={1}
                                    direction="inherit"
                                    disabledColor="#fff"
                                    dx={-25}
                                    dy={-10}
                                    events={
                                      Object {
                                        "onContextMenu": [Function],
                                      }
                                    }
                                    groupComponent={<g />}
                                    id="chart-undefined-1-tickLabels-0"
                                    index={0}
                                    lineHeight={1}
                                    onContextMenuBarLabel={[Function]}
                                    scale={
                                      Object {
                                        "x": [Function],
                                      }
                                    }
                                    style={
                                      Object {
                                        "angle": -65,
                                        "fill": "var(--core-main)",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 10,
                                        "letterSpacing": "normal",
                                        "padding": 10,
                                        "stroke": "transparent",
                                      }
                                    }
                                    text="● adsf"
                                    textAnchor="middle"
                                    textComponent={<Text />}
                                    ticks={
                                      Array [
                                        1,
                                        2,
                                      ]
                                    }
                                    title="10"
                                    tspanComponent={<TSpan />}
                                    verticalAnchor="start"
                                    x={63}
                                    xLabelInfoMap={
                                      Immutable.Map {
                                        "● adsf": Object {
                                          "isDisabled": false,
                                          "tooltip": "10",
                                        },
                                        "● adsf2": Object {
                                          "isDisabled": false,
                                          "tooltip": "10",
                                        },
                                      }
                                    }
                                    y={NaN}
                                  >
                                    <Text
                                      direction="inherit"
                                      dx={-25}
                                      id="chart-undefined-1-tickLabels-0"
                                      key="text"
                                      onContextMenu={[Function]}
                                      title="10"
                                      transform="rotate(-65,63,NaN)"
                                      x={63}
                                      y={NaN}
                                    >
                                      <text
                                        direction="inherit"
                                        dx={-25}
                                        id="chart-undefined-1-tickLabels-0"
                                        onContextMenu={[Function]}
                                        transform="rotate(-65,63,NaN)"
                                        x={63}
                                        y={NaN}
                                      >
                                        <title>
                                          10
                                        </title>
                                        <TSpan
                                          dx={-25}
                                          dy={0}
                                          key="chart-undefined-1-tickLabels-0-key-0"
                                          style={
                                            Object {
                                              "angle": -65,
                                              "fill": "var(--core-main)",
                                              "fontFamily": "var(--core-sans)",
                                              "fontSize": 10,
                                              "letterSpacing": "normal",
                                              "padding": 10,
                                              "stroke": "transparent",
                                            }
                                          }
                                          textAnchor="middle"
                                          x={63}
                                        >
                                          <tspan
                                            dx={-25}
                                            dy={0}
                                            style={
                                              Object {
                                                "angle": -65,
                                                "fill": "var(--core-main)",
                                                "fontFamily": "var(--core-sans)",
                                                "fontSize": 10,
                                                "letterSpacing": "normal",
                                                "padding": 10,
                                                "stroke": "transparent",
                                              }
                                            }
                                            textAnchor="middle"
                                            x={63}
                                          >
                                            ● adsf
                                          </tspan>
                                        </TSpan>
                                      </text>
                                    </Text>
                                  </VictoryLabel>
                                </Label>
                              </g>
                              <g
                                key="chart-undefined-1-tick-group-1"
                                role="presentation"
                              >
                                <LineSegment
                                  datum={2}
                                  id="chart-undefined-1-ticks-1"
                                  index={1}
                                  key="chart-undefined-1-ticks-1"
                                  lineComponent={<Line />}
                                  role="presentation"
                                  scale={
                                    Object {
                                      "x": [Function],
                                    }
                                  }
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  ticks={
                                    Array [
                                      1,
                                      2,
                                    ]
                                  }
                                  type="tick"
                                  x1={421}
                                  x2={421}
                                  y1={NaN}
                                  y2={NaN}
                                >
                                  <Line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "size": 4,
                                        "stroke": "var(--core-main)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    x1={421}
                                    x2={421}
                                    y1={NaN}
                                    y2={NaN}
                                  >
                                    <line
                                      role="presentation"
                                      shapeRendering="auto"
                                      style={
                                        Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        }
                                      }
                                      vectorEffect="non-scaling-stroke"
                                      x1={421}
                                      x2={421}
                                      y1={NaN}
                                      y2={NaN}
                                    />
                                  </Line>
                                </LineSegment>
                                <Label
                                  angle={-65}
                                  datum={2}
                                  disabledColor="#fff"
                                  dx={-25}
                                  dy={-10}
                                  id="chart-undefined-1-tickLabels-1"
                                  index={1}
                                  key="chart-undefined-1-tickLabels-1"
                                  onContextMenuBarLabel={[Function]}
                                  scale={
                                    Object {
                                      "x": [Function],
                                    }
                                  }
                                  style={
                                    Object {
                                      "angle": -65,
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 10,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    }
                                  }
                                  text="● adsf2"
                                  textAnchor="middle"
                                  ticks={
                                    Array [
                                      1,
                                      2,
                                    ]
                                  }
                                  verticalAnchor="start"
                                  x={421}
                                  xLabelInfoMap={
                                    Immutable.Map {
                                      "● adsf": Object {
                                        "isDisabled": false,
                                        "tooltip": "10",
                                      },
                                      "● adsf2": Object {
                                        "isDisabled": false,
                                        "tooltip": "10",
                                      },
                                    }
                                  }
                                  y={NaN}
                                >
                                  <VictoryLabel
                                    angle={-65}
                                    backgroundComponent={<Rect />}
                                    capHeight={0.71}
                                    datum={2}
                                    direction="inherit"
                                    disabledColor="#fff"
                                    dx={-25}
                                    dy={-10}
                                    events={
                                      Object {
                                        "onContextMenu": [Function],
                                      }
                                    }
                                    groupComponent={<g />}
                                    id="chart-undefined-1-tickLabels-1"
                                    index={1}
                                    lineHeight={1}
                                    onContextMenuBarLabel={[Function]}
                                    scale={
                                      Object {
                                        "x": [Function],
                                      }
                                    }
                                    style={
                                      Object {
                                        "angle": -65,
                                        "fill": "var(--core-main)",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 10,
                                        "letterSpacing": "normal",
                                        "padding": 10,
                                        "stroke": "transparent",
                                      }
                                    }
                                    text="● adsf2"
                                    textAnchor="middle"
                                    textComponent={<Text />}
                                    ticks={
                                      Array [
                                        1,
                                        2,
                                      ]
                                    }
                                    title="10"
                                    tspanComponent={<TSpan />}
                                    verticalAnchor="start"
                                    x={421}
                                    xLabelInfoMap={
                                      Immutable.Map {
                                        "● adsf": Object {
                                          "isDisabled": false,
                                          "tooltip": "10",
                                        },
                                        "● adsf2": Object {
                                          "isDisabled": false,
                                          "tooltip": "10",
                                        },
                                      }
                                    }
                                    y={NaN}
                                  >
                                    <Text
                                      direction="inherit"
                                      dx={-25}
                                      id="chart-undefined-1-tickLabels-1"
                                      key="text"
                                      onContextMenu={[Function]}
                                      title="10"
                                      transform="rotate(-65,421,NaN)"
                                      x={421}
                                      y={NaN}
                                    >
                                      <text
                                        direction="inherit"
                                        dx={-25}
                                        id="chart-undefined-1-tickLabels-1"
                                        onContextMenu={[Function]}
                                        transform="rotate(-65,421,NaN)"
                                        x={421}
                                        y={NaN}
                                      >
                                        <title>
                                          10
                                        </title>
                                        <TSpan
                                          dx={-25}
                                          dy={0}
                                          key="chart-undefined-1-tickLabels-1-key-0"
                                          style={
                                            Object {
                                              "angle": -65,
                                              "fill": "var(--core-main)",
                                              "fontFamily": "var(--core-sans)",
                                              "fontSize": 10,
                                              "letterSpacing": "normal",
                                              "padding": 10,
                                              "stroke": "transparent",
                                            }
                                          }
                                          textAnchor="middle"
                                          x={421}
                                        >
                                          <tspan
                                            dx={-25}
                                            dy={0}
                                            style={
                                              Object {
                                                "angle": -65,
                                                "fill": "var(--core-main)",
                                                "fontFamily": "var(--core-sans)",
                                                "fontSize": 10,
                                                "letterSpacing": "normal",
                                                "padding": 10,
                                                "stroke": "transparent",
                                              }
                                            }
                                            textAnchor="middle"
                                            x={421}
                                          >
                                            ● adsf2
                                          </tspan>
                                        </TSpan>
                                      </text>
                                    </Text>
                                  </VictoryLabel>
                                </Label>
                              </g>
                            </g>
                          </VictoryAxis>
                          <VictoryAxis
                            axisComponent={
                              <LineSegment
                                lineComponent={<Line />}
                                role="presentation"
                                shapeRendering="auto"
                                type="axis"
                              />
                            }
                            axisLabelComponent={
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                direction="inherit"
                                groupComponent={<g />}
                                lineHeight={1}
                                textComponent={<Text />}
                                tspanComponent={<TSpan />}
                              />
                            }
                            barDefs={
                              Array [
                                Object {
                                  "color": undefined,
                                  "id": "adsf",
                                  "value": Object {
                                    "channelStatus": "GOOD",
                                    "onContextMenus": Object {
                                      "onContextMenuBar": [Function],
                                      "onContextMenuBarLabel": [Function],
                                    },
                                    "quietDurationMs": undefined,
                                    "quietUntilMs": 1,
                                    "x": "adsf",
                                    "y": 10,
                                  },
                                },
                                Object {
                                  "color": undefined,
                                  "id": "adsf2",
                                  "value": Object {
                                    "channelStatus": "GOOD",
                                    "onContextMenus": Object {
                                      "onContextMenuBar": [Function],
                                      "onContextMenuBarLabel": [Function],
                                    },
                                    "quietDurationMs": undefined,
                                    "quietUntilMs": 1,
                                    "x": "adsf2",
                                    "y": 10,
                                  },
                                },
                              ]
                            }
                            categories={
                              Object {
                                "x": Array [
                                  "adsf",
                                  "adsf2",
                                ],
                                "y": undefined,
                              }
                            }
                            classNames="table-display"
                            containerComponent={
                              <VictoryContainer
                                className="VictoryContainer"
                                portalComponent={<Portal />}
                                portalZIndex={99}
                                responsive={true}
                              />
                            }
                            dataComponent={[Function]}
                            dependentAxis={true}
                            disabled={
                              Object {
                                "xTicks": Object {
                                  "disabledColor": "#fff",
                                  "disabledCondition": [Function],
                                },
                              }
                            }
                            domain={
                              Object {
                                "x": Array [
                                  1,
                                  2,
                                ],
                                "y": Array [
                                  0,
                                  10.0000000001,
                                ],
                              }
                            }
                            fixLabelOverlap={false}
                            gridComponent={
                              <LineSegment
                                lineComponent={<Line />}
                                role="presentation"
                                shapeRendering="auto"
                                type="grid"
                              />
                            }
                            groupComponent={
                              <g
                                role="presentation"
                              />
                            }
                            height={NaN}
                            id="bar-chart-LAG"
                            label="Lag (s)"
                            maxBarWidth={150}
                            minBarWidth={25}
                            name="chart-undefined-1"
                            onContextMenuBar={[Function]}
                            onContextMenuBarLabel={[Function]}
                            padding={
                              Object {
                                "bottom": 120,
                                "left": 63,
                                "right": 29,
                                "top": 16,
                              }
                            }
                            range={
                              Object {
                                "x": Array [
                                  63,
                                  421,
                                ],
                                "y": Array [
                                  NaN,
                                  16,
                                ],
                              }
                            }
                            rotateAxis={true}
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            scrollBrushColor="#fff"
                            standalone={false}
                            stringMap={
                              Object {
                                "x": Object {
                                  "adsf": 1,
                                  "adsf2": 2,
                                },
                                "y": null,
                              }
                            }
                            style={
                              Object {
                                "axisLabel": Object {
                                  "fill": "var(--core-prominent)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 40,
                                  "stroke": "transparent",
                                },
                                "tickLabels": Object {
                                  "fontSize": 10,
                                },
                              }
                            }
                            theme={
                              Object {
                                "axis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offset": 14,
                                      "stroke": "var(--core-prominent)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "fill": "none",
                                      "pointerEvents": "painted",
                                      "stroke": "none",
                                    },
                                  },
                                },
                                "bar": Object {
                                  "style": Object {
                                    "data": Object {
                                      "padding": 8,
                                      "strokeWidth": 0,
                                    },
                                    "labels": Object {
                                      "fill": "var(--core-prominent)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 14,
                                      "stroke": "transparent",
                                    },
                                  },
                                },
                                "dependentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                                "independentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                              }
                            }
                            thresholdsBad={
                              Array [
                                3,
                                3,
                              ]
                            }
                            thresholdsMarginal={
                              Array [
                                3,
                                3,
                              ]
                            }
                            tickComponent={
                              <LineSegment
                                lineComponent={<Line />}
                                role="presentation"
                                shapeRendering="auto"
                                type="tick"
                              />
                            }
                            tickFormat={[Function]}
                            tickLabelComponent={
                              <Label
                                dx={6}
                                dy={0}
                              />
                            }
                            width={450}
                            xAxisLabel="Channel Name"
                            xTickFormat={[Function]}
                            xTickTooltips={
                              Array [
                                "10",
                                "10",
                              ]
                            }
                            yAxisLabel="Lag (s)"
                            yTickFormat={[Function]}
                          >
                            <g
                              role="presentation"
                            >
                              <LineSegment
                                dimension="y"
                                id="chart-undefined-1-axis-0"
                                index={0}
                                key="chart-undefined-1-axis-0"
                                lineComponent={<Line />}
                                role="presentation"
                                scale={
                                  Object {
                                    "y": [Function],
                                  }
                                }
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  }
                                }
                                ticks={
                                  Array [
                                    0,
                                    2,
                                    4,
                                    6,
                                    8,
                                    10,
                                  ]
                                }
                                type="axis"
                                x1={63}
                                x2={63}
                                y1={16}
                                y2={NaN}
                              >
                                <Line
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  x1={63}
                                  x2={63}
                                  y1={16}
                                  y2={NaN}
                                >
                                  <line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "offsetInlineStart": 16,
                                        "stroke": "var(--core-soft)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    vectorEffect="non-scaling-stroke"
                                    x1={63}
                                    x2={63}
                                    y1={16}
                                    y2={NaN}
                                  />
                                </Line>
                              </LineSegment>
                              <VictoryLabel
                                angle={-90}
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                direction="inherit"
                                groupComponent={<g />}
                                id="chart-undefined-1-axisLabel-0"
                                index={0}
                                key="chart-undefined-1-axisLabel-0"
                                lineHeight={1}
                                scale={
                                  Object {
                                    "y": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 40,
                                    "stroke": "transparent",
                                  }
                                }
                                text="Lag (s)"
                                textAnchor="middle"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    0,
                                    2,
                                    4,
                                    6,
                                    8,
                                    10,
                                  ]
                                }
                                tspanComponent={<TSpan />}
                                verticalAnchor="end"
                                x={23}
                                y={NaN}
                              >
                                <Text
                                  direction="inherit"
                                  dx={0}
                                  id="chart-undefined-1-axisLabel-0"
                                  key="text"
                                  transform="rotate(-90,23,NaN)"
                                  x={23}
                                  y={NaN}
                                >
                                  <text
                                    direction="inherit"
                                    dx={0}
                                    id="chart-undefined-1-axisLabel-0"
                                    transform="rotate(-90,23,NaN)"
                                    x={23}
                                    y={NaN}
                                  >
                                    <TSpan
                                      dx={0}
                                      dy={0}
                                      key="chart-undefined-1-axisLabel-0-key-0"
                                      style={
                                        Object {
                                          "fill": "var(--core-prominent)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 40,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="middle"
                                      x={23}
                                    >
                                      <tspan
                                        dx={0}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "var(--core-prominent)",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 14,
                                            "letterSpacing": "normal",
                                            "padding": 40,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="middle"
                                        x={23}
                                      >
                                        Lag (s)
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                              <g
                                key="chart-undefined-1-tick-group-0"
                                role="presentation"
                              >
                                <LineSegment
                                  datum={0}
                                  id="chart-undefined-1-ticks-0"
                                  index={0}
                                  key="chart-undefined-1-ticks-0"
                                  lineComponent={<Line />}
                                  role="presentation"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  type="tick"
                                  x1={63}
                                  x2={59}
                                  y1={NaN}
                                  y2={NaN}
                                >
                                  <Line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "size": 4,
                                        "stroke": "var(--core-main)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    x1={63}
                                    x2={59}
                                    y1={NaN}
                                    y2={NaN}
                                  >
                                    <line
                                      role="presentation"
                                      shapeRendering="auto"
                                      style={
                                        Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        }
                                      }
                                      vectorEffect="non-scaling-stroke"
                                      x1={63}
                                      x2={59}
                                      y1={NaN}
                                      y2={NaN}
                                    />
                                  </Line>
                                </LineSegment>
                                <Label
                                  datum={0}
                                  dx={6}
                                  dy={0}
                                  id="chart-undefined-1-tickLabels-0"
                                  index={0}
                                  key="chart-undefined-1-tickLabels-0"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 10,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    }
                                  }
                                  text={0}
                                  textAnchor="end"
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  verticalAnchor="middle"
                                  x={49}
                                  y={NaN}
                                >
                                  <VictoryLabel
                                    backgroundComponent={<Rect />}
                                    capHeight={0.71}
                                    datum={0}
                                    direction="inherit"
                                    dx={6}
                                    dy={0}
                                    events={
                                      Object {
                                        "onContextMenu": [Function],
                                      }
                                    }
                                    groupComponent={<g />}
                                    id="chart-undefined-1-tickLabels-0"
                                    index={0}
                                    lineHeight={1}
                                    scale={
                                      Object {
                                        "y": [Function],
                                      }
                                    }
                                    style={
                                      Object {
                                        "fill": "var(--core-main)",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 10,
                                        "letterSpacing": "normal",
                                        "padding": 10,
                                        "stroke": "transparent",
                                      }
                                    }
                                    text={0}
                                    textAnchor="end"
                                    textComponent={<Text />}
                                    ticks={
                                      Array [
                                        0,
                                        2,
                                        4,
                                        6,
                                        8,
                                        10,
                                      ]
                                    }
                                    title="0"
                                    tspanComponent={<TSpan />}
                                    verticalAnchor="middle"
                                    x={49}
                                    y={NaN}
                                  >
                                    <Text
                                      direction="inherit"
                                      dx={6}
                                      id="chart-undefined-1-tickLabels-0"
                                      key="text"
                                      onContextMenu={[Function]}
                                      title="0"
                                      x={49}
                                      y={NaN}
                                    >
                                      <text
                                        direction="inherit"
                                        dx={6}
                                        id="chart-undefined-1-tickLabels-0"
                                        onContextMenu={[Function]}
                                        x={49}
                                        y={NaN}
                                      >
                                        <title>
                                          0
                                        </title>
                                        <TSpan
                                          dx={6}
                                          dy={0}
                                          key="chart-undefined-1-tickLabels-0-key-0"
                                          style={
                                            Object {
                                              "fill": "var(--core-main)",
                                              "fontFamily": "var(--core-sans)",
                                              "fontSize": 10,
                                              "letterSpacing": "normal",
                                              "padding": 10,
                                              "stroke": "transparent",
                                            }
                                          }
                                          textAnchor="end"
                                          x={49}
                                        >
                                          <tspan
                                            dx={6}
                                            dy={0}
                                            style={
                                              Object {
                                                "fill": "var(--core-main)",
                                                "fontFamily": "var(--core-sans)",
                                                "fontSize": 10,
                                                "letterSpacing": "normal",
                                                "padding": 10,
                                                "stroke": "transparent",
                                              }
                                            }
                                            textAnchor="end"
                                            x={49}
                                          >
                                            0
                                          </tspan>
                                        </TSpan>
                                      </text>
                                    </Text>
                                  </VictoryLabel>
                                </Label>
                              </g>
                              <g
                                key="chart-undefined-1-tick-group-1"
                                role="presentation"
                              >
                                <LineSegment
                                  datum={2}
                                  id="chart-undefined-1-ticks-1"
                                  index={1}
                                  key="chart-undefined-1-ticks-1"
                                  lineComponent={<Line />}
                                  role="presentation"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  type="tick"
                                  x1={63}
                                  x2={59}
                                  y1={NaN}
                                  y2={NaN}
                                >
                                  <Line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "size": 4,
                                        "stroke": "var(--core-main)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    x1={63}
                                    x2={59}
                                    y1={NaN}
                                    y2={NaN}
                                  >
                                    <line
                                      role="presentation"
                                      shapeRendering="auto"
                                      style={
                                        Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        }
                                      }
                                      vectorEffect="non-scaling-stroke"
                                      x1={63}
                                      x2={59}
                                      y1={NaN}
                                      y2={NaN}
                                    />
                                  </Line>
                                </LineSegment>
                                <Label
                                  datum={2}
                                  dx={6}
                                  dy={0}
                                  id="chart-undefined-1-tickLabels-1"
                                  index={1}
                                  key="chart-undefined-1-tickLabels-1"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 10,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    }
                                  }
                                  text={2}
                                  textAnchor="end"
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  verticalAnchor="middle"
                                  x={49}
                                  y={NaN}
                                >
                                  <VictoryLabel
                                    backgroundComponent={<Rect />}
                                    capHeight={0.71}
                                    datum={2}
                                    direction="inherit"
                                    dx={6}
                                    dy={0}
                                    events={
                                      Object {
                                        "onContextMenu": [Function],
                                      }
                                    }
                                    groupComponent={<g />}
                                    id="chart-undefined-1-tickLabels-1"
                                    index={1}
                                    lineHeight={1}
                                    scale={
                                      Object {
                                        "y": [Function],
                                      }
                                    }
                                    style={
                                      Object {
                                        "fill": "var(--core-main)",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 10,
                                        "letterSpacing": "normal",
                                        "padding": 10,
                                        "stroke": "transparent",
                                      }
                                    }
                                    text={2}
                                    textAnchor="end"
                                    textComponent={<Text />}
                                    ticks={
                                      Array [
                                        0,
                                        2,
                                        4,
                                        6,
                                        8,
                                        10,
                                      ]
                                    }
                                    title="2"
                                    tspanComponent={<TSpan />}
                                    verticalAnchor="middle"
                                    x={49}
                                    y={NaN}
                                  >
                                    <Text
                                      direction="inherit"
                                      dx={6}
                                      id="chart-undefined-1-tickLabels-1"
                                      key="text"
                                      onContextMenu={[Function]}
                                      title="2"
                                      x={49}
                                      y={NaN}
                                    >
                                      <text
                                        direction="inherit"
                                        dx={6}
                                        id="chart-undefined-1-tickLabels-1"
                                        onContextMenu={[Function]}
                                        x={49}
                                        y={NaN}
                                      >
                                        <title>
                                          2
                                        </title>
                                        <TSpan
                                          dx={6}
                                          dy={0}
                                          key="chart-undefined-1-tickLabels-1-key-0"
                                          style={
                                            Object {
                                              "fill": "var(--core-main)",
                                              "fontFamily": "var(--core-sans)",
                                              "fontSize": 10,
                                              "letterSpacing": "normal",
                                              "padding": 10,
                                              "stroke": "transparent",
                                            }
                                          }
                                          textAnchor="end"
                                          x={49}
                                        >
                                          <tspan
                                            dx={6}
                                            dy={0}
                                            style={
                                              Object {
                                                "fill": "var(--core-main)",
                                                "fontFamily": "var(--core-sans)",
                                                "fontSize": 10,
                                                "letterSpacing": "normal",
                                                "padding": 10,
                                                "stroke": "transparent",
                                              }
                                            }
                                            textAnchor="end"
                                            x={49}
                                          >
                                            2
                                          </tspan>
                                        </TSpan>
                                      </text>
                                    </Text>
                                  </VictoryLabel>
                                </Label>
                              </g>
                              <g
                                key="chart-undefined-1-tick-group-2"
                                role="presentation"
                              >
                                <LineSegment
                                  datum={4}
                                  id="chart-undefined-1-ticks-2"
                                  index={2}
                                  key="chart-undefined-1-ticks-2"
                                  lineComponent={<Line />}
                                  role="presentation"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  type="tick"
                                  x1={63}
                                  x2={59}
                                  y1={NaN}
                                  y2={NaN}
                                >
                                  <Line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "size": 4,
                                        "stroke": "var(--core-main)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    x1={63}
                                    x2={59}
                                    y1={NaN}
                                    y2={NaN}
                                  >
                                    <line
                                      role="presentation"
                                      shapeRendering="auto"
                                      style={
                                        Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        }
                                      }
                                      vectorEffect="non-scaling-stroke"
                                      x1={63}
                                      x2={59}
                                      y1={NaN}
                                      y2={NaN}
                                    />
                                  </Line>
                                </LineSegment>
                                <Label
                                  datum={4}
                                  dx={6}
                                  dy={0}
                                  id="chart-undefined-1-tickLabels-2"
                                  index={2}
                                  key="chart-undefined-1-tickLabels-2"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 10,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    }
                                  }
                                  text={4}
                                  textAnchor="end"
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  verticalAnchor="middle"
                                  x={49}
                                  y={NaN}
                                >
                                  <VictoryLabel
                                    backgroundComponent={<Rect />}
                                    capHeight={0.71}
                                    datum={4}
                                    direction="inherit"
                                    dx={6}
                                    dy={0}
                                    events={
                                      Object {
                                        "onContextMenu": [Function],
                                      }
                                    }
                                    groupComponent={<g />}
                                    id="chart-undefined-1-tickLabels-2"
                                    index={2}
                                    lineHeight={1}
                                    scale={
                                      Object {
                                        "y": [Function],
                                      }
                                    }
                                    style={
                                      Object {
                                        "fill": "var(--core-main)",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 10,
                                        "letterSpacing": "normal",
                                        "padding": 10,
                                        "stroke": "transparent",
                                      }
                                    }
                                    text={4}
                                    textAnchor="end"
                                    textComponent={<Text />}
                                    ticks={
                                      Array [
                                        0,
                                        2,
                                        4,
                                        6,
                                        8,
                                        10,
                                      ]
                                    }
                                    title="4"
                                    tspanComponent={<TSpan />}
                                    verticalAnchor="middle"
                                    x={49}
                                    y={NaN}
                                  >
                                    <Text
                                      direction="inherit"
                                      dx={6}
                                      id="chart-undefined-1-tickLabels-2"
                                      key="text"
                                      onContextMenu={[Function]}
                                      title="4"
                                      x={49}
                                      y={NaN}
                                    >
                                      <text
                                        direction="inherit"
                                        dx={6}
                                        id="chart-undefined-1-tickLabels-2"
                                        onContextMenu={[Function]}
                                        x={49}
                                        y={NaN}
                                      >
                                        <title>
                                          4
                                        </title>
                                        <TSpan
                                          dx={6}
                                          dy={0}
                                          key="chart-undefined-1-tickLabels-2-key-0"
                                          style={
                                            Object {
                                              "fill": "var(--core-main)",
                                              "fontFamily": "var(--core-sans)",
                                              "fontSize": 10,
                                              "letterSpacing": "normal",
                                              "padding": 10,
                                              "stroke": "transparent",
                                            }
                                          }
                                          textAnchor="end"
                                          x={49}
                                        >
                                          <tspan
                                            dx={6}
                                            dy={0}
                                            style={
                                              Object {
                                                "fill": "var(--core-main)",
                                                "fontFamily": "var(--core-sans)",
                                                "fontSize": 10,
                                                "letterSpacing": "normal",
                                                "padding": 10,
                                                "stroke": "transparent",
                                              }
                                            }
                                            textAnchor="end"
                                            x={49}
                                          >
                                            4
                                          </tspan>
                                        </TSpan>
                                      </text>
                                    </Text>
                                  </VictoryLabel>
                                </Label>
                              </g>
                              <g
                                key="chart-undefined-1-tick-group-3"
                                role="presentation"
                              >
                                <LineSegment
                                  datum={6}
                                  id="chart-undefined-1-ticks-3"
                                  index={3}
                                  key="chart-undefined-1-ticks-3"
                                  lineComponent={<Line />}
                                  role="presentation"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  type="tick"
                                  x1={63}
                                  x2={59}
                                  y1={NaN}
                                  y2={NaN}
                                >
                                  <Line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "size": 4,
                                        "stroke": "var(--core-main)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    x1={63}
                                    x2={59}
                                    y1={NaN}
                                    y2={NaN}
                                  >
                                    <line
                                      role="presentation"
                                      shapeRendering="auto"
                                      style={
                                        Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        }
                                      }
                                      vectorEffect="non-scaling-stroke"
                                      x1={63}
                                      x2={59}
                                      y1={NaN}
                                      y2={NaN}
                                    />
                                  </Line>
                                </LineSegment>
                                <Label
                                  datum={6}
                                  dx={6}
                                  dy={0}
                                  id="chart-undefined-1-tickLabels-3"
                                  index={3}
                                  key="chart-undefined-1-tickLabels-3"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 10,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    }
                                  }
                                  text={6}
                                  textAnchor="end"
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  verticalAnchor="middle"
                                  x={49}
                                  y={NaN}
                                >
                                  <VictoryLabel
                                    backgroundComponent={<Rect />}
                                    capHeight={0.71}
                                    datum={6}
                                    direction="inherit"
                                    dx={6}
                                    dy={0}
                                    events={
                                      Object {
                                        "onContextMenu": [Function],
                                      }
                                    }
                                    groupComponent={<g />}
                                    id="chart-undefined-1-tickLabels-3"
                                    index={3}
                                    lineHeight={1}
                                    scale={
                                      Object {
                                        "y": [Function],
                                      }
                                    }
                                    style={
                                      Object {
                                        "fill": "var(--core-main)",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 10,
                                        "letterSpacing": "normal",
                                        "padding": 10,
                                        "stroke": "transparent",
                                      }
                                    }
                                    text={6}
                                    textAnchor="end"
                                    textComponent={<Text />}
                                    ticks={
                                      Array [
                                        0,
                                        2,
                                        4,
                                        6,
                                        8,
                                        10,
                                      ]
                                    }
                                    title="6"
                                    tspanComponent={<TSpan />}
                                    verticalAnchor="middle"
                                    x={49}
                                    y={NaN}
                                  >
                                    <Text
                                      direction="inherit"
                                      dx={6}
                                      id="chart-undefined-1-tickLabels-3"
                                      key="text"
                                      onContextMenu={[Function]}
                                      title="6"
                                      x={49}
                                      y={NaN}
                                    >
                                      <text
                                        direction="inherit"
                                        dx={6}
                                        id="chart-undefined-1-tickLabels-3"
                                        onContextMenu={[Function]}
                                        x={49}
                                        y={NaN}
                                      >
                                        <title>
                                          6
                                        </title>
                                        <TSpan
                                          dx={6}
                                          dy={0}
                                          key="chart-undefined-1-tickLabels-3-key-0"
                                          style={
                                            Object {
                                              "fill": "var(--core-main)",
                                              "fontFamily": "var(--core-sans)",
                                              "fontSize": 10,
                                              "letterSpacing": "normal",
                                              "padding": 10,
                                              "stroke": "transparent",
                                            }
                                          }
                                          textAnchor="end"
                                          x={49}
                                        >
                                          <tspan
                                            dx={6}
                                            dy={0}
                                            style={
                                              Object {
                                                "fill": "var(--core-main)",
                                                "fontFamily": "var(--core-sans)",
                                                "fontSize": 10,
                                                "letterSpacing": "normal",
                                                "padding": 10,
                                                "stroke": "transparent",
                                              }
                                            }
                                            textAnchor="end"
                                            x={49}
                                          >
                                            6
                                          </tspan>
                                        </TSpan>
                                      </text>
                                    </Text>
                                  </VictoryLabel>
                                </Label>
                              </g>
                              <g
                                key="chart-undefined-1-tick-group-4"
                                role="presentation"
                              >
                                <LineSegment
                                  datum={8}
                                  id="chart-undefined-1-ticks-4"
                                  index={4}
                                  key="chart-undefined-1-ticks-4"
                                  lineComponent={<Line />}
                                  role="presentation"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  type="tick"
                                  x1={63}
                                  x2={59}
                                  y1={NaN}
                                  y2={NaN}
                                >
                                  <Line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "size": 4,
                                        "stroke": "var(--core-main)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    x1={63}
                                    x2={59}
                                    y1={NaN}
                                    y2={NaN}
                                  >
                                    <line
                                      role="presentation"
                                      shapeRendering="auto"
                                      style={
                                        Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        }
                                      }
                                      vectorEffect="non-scaling-stroke"
                                      x1={63}
                                      x2={59}
                                      y1={NaN}
                                      y2={NaN}
                                    />
                                  </Line>
                                </LineSegment>
                                <Label
                                  datum={8}
                                  dx={6}
                                  dy={0}
                                  id="chart-undefined-1-tickLabels-4"
                                  index={4}
                                  key="chart-undefined-1-tickLabels-4"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 10,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    }
                                  }
                                  text={8}
                                  textAnchor="end"
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  verticalAnchor="middle"
                                  x={49}
                                  y={NaN}
                                >
                                  <VictoryLabel
                                    backgroundComponent={<Rect />}
                                    capHeight={0.71}
                                    datum={8}
                                    direction="inherit"
                                    dx={6}
                                    dy={0}
                                    events={
                                      Object {
                                        "onContextMenu": [Function],
                                      }
                                    }
                                    groupComponent={<g />}
                                    id="chart-undefined-1-tickLabels-4"
                                    index={4}
                                    lineHeight={1}
                                    scale={
                                      Object {
                                        "y": [Function],
                                      }
                                    }
                                    style={
                                      Object {
                                        "fill": "var(--core-main)",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 10,
                                        "letterSpacing": "normal",
                                        "padding": 10,
                                        "stroke": "transparent",
                                      }
                                    }
                                    text={8}
                                    textAnchor="end"
                                    textComponent={<Text />}
                                    ticks={
                                      Array [
                                        0,
                                        2,
                                        4,
                                        6,
                                        8,
                                        10,
                                      ]
                                    }
                                    title="8"
                                    tspanComponent={<TSpan />}
                                    verticalAnchor="middle"
                                    x={49}
                                    y={NaN}
                                  >
                                    <Text
                                      direction="inherit"
                                      dx={6}
                                      id="chart-undefined-1-tickLabels-4"
                                      key="text"
                                      onContextMenu={[Function]}
                                      title="8"
                                      x={49}
                                      y={NaN}
                                    >
                                      <text
                                        direction="inherit"
                                        dx={6}
                                        id="chart-undefined-1-tickLabels-4"
                                        onContextMenu={[Function]}
                                        x={49}
                                        y={NaN}
                                      >
                                        <title>
                                          8
                                        </title>
                                        <TSpan
                                          dx={6}
                                          dy={0}
                                          key="chart-undefined-1-tickLabels-4-key-0"
                                          style={
                                            Object {
                                              "fill": "var(--core-main)",
                                              "fontFamily": "var(--core-sans)",
                                              "fontSize": 10,
                                              "letterSpacing": "normal",
                                              "padding": 10,
                                              "stroke": "transparent",
                                            }
                                          }
                                          textAnchor="end"
                                          x={49}
                                        >
                                          <tspan
                                            dx={6}
                                            dy={0}
                                            style={
                                              Object {
                                                "fill": "var(--core-main)",
                                                "fontFamily": "var(--core-sans)",
                                                "fontSize": 10,
                                                "letterSpacing": "normal",
                                                "padding": 10,
                                                "stroke": "transparent",
                                              }
                                            }
                                            textAnchor="end"
                                            x={49}
                                          >
                                            8
                                          </tspan>
                                        </TSpan>
                                      </text>
                                    </Text>
                                  </VictoryLabel>
                                </Label>
                              </g>
                              <g
                                key="chart-undefined-1-tick-group-5"
                                role="presentation"
                              >
                                <LineSegment
                                  datum={10}
                                  id="chart-undefined-1-ticks-5"
                                  index={5}
                                  key="chart-undefined-1-ticks-5"
                                  lineComponent={<Line />}
                                  role="presentation"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  type="tick"
                                  x1={63}
                                  x2={59}
                                  y1={NaN}
                                  y2={NaN}
                                >
                                  <Line
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "size": 4,
                                        "stroke": "var(--core-main)",
                                        "strokeWidth": 1,
                                      }
                                    }
                                    x1={63}
                                    x2={59}
                                    y1={NaN}
                                    y2={NaN}
                                  >
                                    <line
                                      role="presentation"
                                      shapeRendering="auto"
                                      style={
                                        Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        }
                                      }
                                      vectorEffect="non-scaling-stroke"
                                      x1={63}
                                      x2={59}
                                      y1={NaN}
                                      y2={NaN}
                                    />
                                  </Line>
                                </LineSegment>
                                <Label
                                  datum={10}
                                  dx={6}
                                  dy={0}
                                  id="chart-undefined-1-tickLabels-5"
                                  index={5}
                                  key="chart-undefined-1-tickLabels-5"
                                  scale={
                                    Object {
                                      "y": [Function],
                                    }
                                  }
                                  style={
                                    Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 10,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    }
                                  }
                                  text={10}
                                  textAnchor="end"
                                  ticks={
                                    Array [
                                      0,
                                      2,
                                      4,
                                      6,
                                      8,
                                      10,
                                    ]
                                  }
                                  verticalAnchor="middle"
                                  x={49}
                                  y={NaN}
                                >
                                  <VictoryLabel
                                    backgroundComponent={<Rect />}
                                    capHeight={0.71}
                                    datum={10}
                                    direction="inherit"
                                    dx={6}
                                    dy={0}
                                    events={
                                      Object {
                                        "onContextMenu": [Function],
                                      }
                                    }
                                    groupComponent={<g />}
                                    id="chart-undefined-1-tickLabels-5"
                                    index={5}
                                    lineHeight={1}
                                    scale={
                                      Object {
                                        "y": [Function],
                                      }
                                    }
                                    style={
                                      Object {
                                        "fill": "var(--core-main)",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 10,
                                        "letterSpacing": "normal",
                                        "padding": 10,
                                        "stroke": "transparent",
                                      }
                                    }
                                    text={10}
                                    textAnchor="end"
                                    textComponent={<Text />}
                                    ticks={
                                      Array [
                                        0,
                                        2,
                                        4,
                                        6,
                                        8,
                                        10,
                                      ]
                                    }
                                    title="10"
                                    tspanComponent={<TSpan />}
                                    verticalAnchor="middle"
                                    x={49}
                                    y={NaN}
                                  >
                                    <Text
                                      direction="inherit"
                                      dx={6}
                                      id="chart-undefined-1-tickLabels-5"
                                      key="text"
                                      onContextMenu={[Function]}
                                      title="10"
                                      x={49}
                                      y={NaN}
                                    >
                                      <text
                                        direction="inherit"
                                        dx={6}
                                        id="chart-undefined-1-tickLabels-5"
                                        onContextMenu={[Function]}
                                        x={49}
                                        y={NaN}
                                      >
                                        <title>
                                          10
                                        </title>
                                        <TSpan
                                          dx={6}
                                          dy={0}
                                          key="chart-undefined-1-tickLabels-5-key-0"
                                          style={
                                            Object {
                                              "fill": "var(--core-main)",
                                              "fontFamily": "var(--core-sans)",
                                              "fontSize": 10,
                                              "letterSpacing": "normal",
                                              "padding": 10,
                                              "stroke": "transparent",
                                            }
                                          }
                                          textAnchor="end"
                                          x={49}
                                        >
                                          <tspan
                                            dx={6}
                                            dy={0}
                                            style={
                                              Object {
                                                "fill": "var(--core-main)",
                                                "fontFamily": "var(--core-sans)",
                                                "fontSize": 10,
                                                "letterSpacing": "normal",
                                                "padding": 10,
                                                "stroke": "transparent",
                                              }
                                            }
                                            textAnchor="end"
                                            x={49}
                                          >
                                            10
                                          </tspan>
                                        </TSpan>
                                      </text>
                                    </Text>
                                  </VictoryLabel>
                                </Label>
                              </g>
                            </g>
                          </VictoryAxis>
                        </Component>
                        <VictoryBar
                          alignment="middle"
                          barWidth={NaN}
                          categories={
                            Object {
                              "x": Array [
                                "adsf",
                                "adsf2",
                              ],
                              "y": undefined,
                            }
                          }
                          containerComponent={
                            <VictoryContainer
                              className="VictoryContainer"
                              portalComponent={<Portal />}
                              portalZIndex={99}
                              responsive={true}
                            />
                          }
                          data={
                            Array [
                              Object {
                                "barWidth": NaN,
                                "channelStatus": "GOOD",
                                "onContextMenus": Object {
                                  "onContextMenuBar": [Function],
                                  "onContextMenuBarLabel": [Function],
                                },
                                "quietDurationMs": undefined,
                                "quietUntilMs": 1,
                                "x": "adsf",
                                "y": 10,
                              },
                            ]
                          }
                          dataComponent={
                            <Bar
                              defaultBarWidth={8}
                              pathComponent={<Path />}
                              role="presentation"
                              shapeRendering="auto"
                            />
                          }
                          domain={
                            Object {
                              "x": Array [
                                1,
                                2,
                              ],
                              "y": Array [
                                0,
                                10.0000000001,
                              ],
                            }
                          }
                          events={
                            Array [
                              Object {
                                "eventHandlers": Object {
                                  "onContextMenu": [Function],
                                },
                                "target": "data",
                              },
                            ]
                          }
                          groupComponent={
                            <g
                              role="presentation"
                            />
                          }
                          height={NaN}
                          key="chart-bar-2-key-2"
                          labelComponent={<QuietIndicatorWrapper />}
                          labels={[Function]}
                          name="chart-bar-2"
                          padding={
                            Object {
                              "bottom": 120,
                              "left": 63,
                              "right": 29,
                              "top": 16,
                            }
                          }
                          range={
                            Object {
                              "x": Array [
                                63,
                                421,
                              ],
                              "y": Array [
                                NaN,
                                16,
                              ],
                            }
                          }
                          samples={50}
                          scale={
                            Object {
                              "x": [Function],
                              "y": [Function],
                            }
                          }
                          sortOrder="ascending"
                          standalone={false}
                          stringMap={
                            Object {
                              "x": Object {
                                "adsf": 1,
                                "adsf2": 2,
                              },
                              "y": null,
                            }
                          }
                          style={
                            Object {
                              "data": Object {
                                "fill": undefined,
                                "width": NaN,
                              },
                              "parent": Object {
                                "border": "1px solid #ffffff",
                              },
                            }
                          }
                          theme={
                            Object {
                              "axis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offset": 14,
                                    "stroke": "var(--core-prominent)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "fill": "none",
                                    "pointerEvents": "painted",
                                    "stroke": "none",
                                  },
                                },
                              },
                              "bar": Object {
                                "style": Object {
                                  "data": Object {
                                    "padding": 8,
                                    "strokeWidth": 0,
                                  },
                                  "labels": Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 14,
                                    "stroke": "transparent",
                                  },
                                },
                              },
                              "dependentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                              "independentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                            }
                          }
                          width={450}
                        >
                          <g
                            role="presentation"
                          >
                            <Bar
                              alignment="middle"
                              barWidth={NaN}
                              data={
                                Array [
                                  Object {
                                    "_x": 1,
                                    "_y": 10,
                                    "barWidth": NaN,
                                    "channelStatus": "GOOD",
                                    "onContextMenus": Object {
                                      "onContextMenuBar": [Function],
                                      "onContextMenuBarLabel": [Function],
                                    },
                                    "quietDurationMs": undefined,
                                    "quietUntilMs": 1,
                                    "x": "adsf",
                                    "xName": "adsf",
                                    "y": 10,
                                  },
                                ]
                              }
                              datum={
                                Object {
                                  "_x": 1,
                                  "_y": 10,
                                  "barWidth": NaN,
                                  "channelStatus": "GOOD",
                                  "onContextMenus": Object {
                                    "onContextMenuBar": [Function],
                                    "onContextMenuBarLabel": [Function],
                                  },
                                  "quietDurationMs": undefined,
                                  "quietUntilMs": 1,
                                  "x": "adsf",
                                  "xName": "adsf",
                                  "y": 10,
                                }
                              }
                              defaultBarWidth={8}
                              events={
                                Object {
                                  "onContextMenu": [Function],
                                }
                              }
                              height={NaN}
                              id="chart-bar-2-data-0"
                              index={0}
                              key="chart-bar-2-data-0"
                              pathComponent={<Path />}
                              role="presentation"
                              scale={
                                Object {
                                  "x": [Function],
                                  "y": [Function],
                                }
                              }
                              shapeRendering="auto"
                              style={
                                Object {
                                  "fill": undefined,
                                  "padding": 8,
                                  "strokeWidth": 0,
                                  "width": NaN,
                                }
                              }
                              width={450}
                              x={63}
                              x0={63}
                              y={NaN}
                              y0={NaN}
                            >
                              <Path
                                d="M 61, NaN 
A 0 0 0 0 0, 61, NaN 
L 61, NaN 
A 0 0 0 0 0, 61, NaN 
L 65, NaN 
A 0 0 0 0 0, 65, NaN 
L 65, NaN 
A 0 0 0 0 0, 65, NaN 
 z"
                                onContextMenu={[Function]}
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "fill": undefined,
                                    "padding": 8,
                                    "stroke": "black",
                                    "strokeWidth": 0,
                                    "width": NaN,
                                  }
                                }
                              >
                                <path
                                  d="M 61, NaN 
A 0 0 0 0 0, 61, NaN 
L 61, NaN 
A 0 0 0 0 0, 61, NaN 
L 65, NaN 
A 0 0 0 0 0, 65, NaN 
L 65, NaN 
A 0 0 0 0 0, 65, NaN 
 z"
                                  onContextMenu={[Function]}
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "fill": undefined,
                                      "padding": 8,
                                      "stroke": "black",
                                      "strokeWidth": 0,
                                      "width": NaN,
                                    }
                                  }
                                />
                              </Path>
                            </Bar>
                            <QuietIndicatorWrapper
                              data={
                                Array [
                                  Object {
                                    "_x": 1,
                                    "_y": 10,
                                    "barWidth": NaN,
                                    "channelStatus": "GOOD",
                                    "onContextMenus": Object {
                                      "onContextMenuBar": [Function],
                                      "onContextMenuBarLabel": [Function],
                                    },
                                    "quietDurationMs": undefined,
                                    "quietUntilMs": 1,
                                    "x": "adsf",
                                    "xName": "adsf",
                                    "y": 10,
                                  },
                                ]
                              }
                              datum={
                                Object {
                                  "_x": 1,
                                  "_y": 10,
                                  "barWidth": NaN,
                                  "channelStatus": "GOOD",
                                  "onContextMenus": Object {
                                    "onContextMenuBar": [Function],
                                    "onContextMenuBarLabel": [Function],
                                  },
                                  "quietDurationMs": undefined,
                                  "quietUntilMs": 1,
                                  "x": "adsf",
                                  "xName": "adsf",
                                  "y": 10,
                                }
                              }
                              dx={0}
                              dy={-14}
                              events={Object {}}
                              height={NaN}
                              id="chart-bar-2-labels-0"
                              index={0}
                              key="chart-bar-2-labels-0"
                              labelPlacement="vertical"
                              scale={
                                Object {
                                  "x": [Function],
                                  "y": [Function],
                                }
                              }
                              style={
                                Object {
                                  "fill": "var(--core-prominent)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 14,
                                  "stroke": "transparent",
                                }
                              }
                              text={[Function]}
                              textAnchor="middle"
                              verticalAnchor="end"
                              width={450}
                              x={63}
                              y={NaN}
                            >
                              <g
                                transform="translate(-42, NaN)"
                              >
                                <foreignObject
                                  height="60"
                                  onContextMenu={[Function]}
                                  width="60"
                                  x="75"
                                  y="0"
                                >
                                  <Component
                                    className="quiet-indicator--inside"
                                    data={
                                      Object {
                                        "quietTimingInfo": Object {
                                          "quietDurationMs": undefined,
                                          "quietUntilMs": 1,
                                        },
                                        "status": "GOOD",
                                      }
                                    }
                                    diameterPx={NaN}
                                  />
                                </foreignObject>
                              </g>
                            </QuietIndicatorWrapper>
                          </g>
                        </VictoryBar>
                        <VictoryBar
                          alignment="middle"
                          barWidth={NaN}
                          categories={
                            Object {
                              "x": Array [
                                "adsf",
                                "adsf2",
                              ],
                              "y": undefined,
                            }
                          }
                          containerComponent={
                            <VictoryContainer
                              className="VictoryContainer"
                              portalComponent={<Portal />}
                              portalZIndex={99}
                              responsive={true}
                            />
                          }
                          data={
                            Array [
                              Object {
                                "barWidth": NaN,
                                "channelStatus": "GOOD",
                                "onContextMenus": Object {
                                  "onContextMenuBar": [Function],
                                  "onContextMenuBarLabel": [Function],
                                },
                                "quietDurationMs": undefined,
                                "quietUntilMs": 1,
                                "x": "adsf2",
                                "y": 10,
                              },
                            ]
                          }
                          dataComponent={
                            <Bar
                              defaultBarWidth={8}
                              pathComponent={<Path />}
                              role="presentation"
                              shapeRendering="auto"
                            />
                          }
                          domain={
                            Object {
                              "x": Array [
                                1,
                                2,
                              ],
                              "y": Array [
                                0,
                                10.0000000001,
                              ],
                            }
                          }
                          events={
                            Array [
                              Object {
                                "eventHandlers": Object {
                                  "onContextMenu": [Function],
                                },
                                "target": "data",
                              },
                            ]
                          }
                          groupComponent={
                            <g
                              role="presentation"
                            />
                          }
                          height={NaN}
                          key="chart-bar-3-key-3"
                          labelComponent={<QuietIndicatorWrapper />}
                          labels={[Function]}
                          name="chart-bar-3"
                          padding={
                            Object {
                              "bottom": 120,
                              "left": 63,
                              "right": 29,
                              "top": 16,
                            }
                          }
                          range={
                            Object {
                              "x": Array [
                                63,
                                421,
                              ],
                              "y": Array [
                                NaN,
                                16,
                              ],
                            }
                          }
                          samples={50}
                          scale={
                            Object {
                              "x": [Function],
                              "y": [Function],
                            }
                          }
                          sortOrder="ascending"
                          standalone={false}
                          stringMap={
                            Object {
                              "x": Object {
                                "adsf": 1,
                                "adsf2": 2,
                              },
                              "y": null,
                            }
                          }
                          style={
                            Object {
                              "data": Object {
                                "fill": undefined,
                                "width": NaN,
                              },
                              "parent": Object {
                                "border": "1px solid #ffffff",
                              },
                            }
                          }
                          theme={
                            Object {
                              "axis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offset": 14,
                                    "stroke": "var(--core-prominent)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "fill": "none",
                                    "pointerEvents": "painted",
                                    "stroke": "none",
                                  },
                                },
                              },
                              "bar": Object {
                                "style": Object {
                                  "data": Object {
                                    "padding": 8,
                                    "strokeWidth": 0,
                                  },
                                  "labels": Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 14,
                                    "stroke": "transparent",
                                  },
                                },
                              },
                              "dependentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                              "independentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                            }
                          }
                          width={450}
                        >
                          <g
                            role="presentation"
                          >
                            <Bar
                              alignment="middle"
                              barWidth={NaN}
                              data={
                                Array [
                                  Object {
                                    "_x": 2,
                                    "_y": 10,
                                    "barWidth": NaN,
                                    "channelStatus": "GOOD",
                                    "onContextMenus": Object {
                                      "onContextMenuBar": [Function],
                                      "onContextMenuBarLabel": [Function],
                                    },
                                    "quietDurationMs": undefined,
                                    "quietUntilMs": 1,
                                    "x": "adsf2",
                                    "xName": "adsf2",
                                    "y": 10,
                                  },
                                ]
                              }
                              datum={
                                Object {
                                  "_x": 2,
                                  "_y": 10,
                                  "barWidth": NaN,
                                  "channelStatus": "GOOD",
                                  "onContextMenus": Object {
                                    "onContextMenuBar": [Function],
                                    "onContextMenuBarLabel": [Function],
                                  },
                                  "quietDurationMs": undefined,
                                  "quietUntilMs": 1,
                                  "x": "adsf2",
                                  "xName": "adsf2",
                                  "y": 10,
                                }
                              }
                              defaultBarWidth={8}
                              events={
                                Object {
                                  "onContextMenu": [Function],
                                }
                              }
                              height={NaN}
                              id="chart-bar-3-data-0"
                              index={0}
                              key="chart-bar-3-data-0"
                              pathComponent={<Path />}
                              role="presentation"
                              scale={
                                Object {
                                  "x": [Function],
                                  "y": [Function],
                                }
                              }
                              shapeRendering="auto"
                              style={
                                Object {
                                  "fill": undefined,
                                  "padding": 8,
                                  "strokeWidth": 0,
                                  "width": NaN,
                                }
                              }
                              width={450}
                              x={421}
                              x0={63}
                              y={NaN}
                              y0={NaN}
                            >
                              <Path
                                d="M 419, NaN 
A 0 0 0 0 0, 419, NaN 
L 419, NaN 
A 0 0 0 0 0, 419, NaN 
L 423, NaN 
A 0 0 0 0 0, 423, NaN 
L 423, NaN 
A 0 0 0 0 0, 423, NaN 
 z"
                                onContextMenu={[Function]}
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "fill": undefined,
                                    "padding": 8,
                                    "stroke": "black",
                                    "strokeWidth": 0,
                                    "width": NaN,
                                  }
                                }
                              >
                                <path
                                  d="M 419, NaN 
A 0 0 0 0 0, 419, NaN 
L 419, NaN 
A 0 0 0 0 0, 419, NaN 
L 423, NaN 
A 0 0 0 0 0, 423, NaN 
L 423, NaN 
A 0 0 0 0 0, 423, NaN 
 z"
                                  onContextMenu={[Function]}
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "fill": undefined,
                                      "padding": 8,
                                      "stroke": "black",
                                      "strokeWidth": 0,
                                      "width": NaN,
                                    }
                                  }
                                />
                              </Path>
                            </Bar>
                            <QuietIndicatorWrapper
                              data={
                                Array [
                                  Object {
                                    "_x": 2,
                                    "_y": 10,
                                    "barWidth": NaN,
                                    "channelStatus": "GOOD",
                                    "onContextMenus": Object {
                                      "onContextMenuBar": [Function],
                                      "onContextMenuBarLabel": [Function],
                                    },
                                    "quietDurationMs": undefined,
                                    "quietUntilMs": 1,
                                    "x": "adsf2",
                                    "xName": "adsf2",
                                    "y": 10,
                                  },
                                ]
                              }
                              datum={
                                Object {
                                  "_x": 2,
                                  "_y": 10,
                                  "barWidth": NaN,
                                  "channelStatus": "GOOD",
                                  "onContextMenus": Object {
                                    "onContextMenuBar": [Function],
                                    "onContextMenuBarLabel": [Function],
                                  },
                                  "quietDurationMs": undefined,
                                  "quietUntilMs": 1,
                                  "x": "adsf2",
                                  "xName": "adsf2",
                                  "y": 10,
                                }
                              }
                              dx={0}
                              dy={-14}
                              events={Object {}}
                              height={NaN}
                              id="chart-bar-3-labels-0"
                              index={0}
                              key="chart-bar-3-labels-0"
                              labelPlacement="vertical"
                              scale={
                                Object {
                                  "x": [Function],
                                  "y": [Function],
                                }
                              }
                              style={
                                Object {
                                  "fill": "var(--core-prominent)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 14,
                                  "stroke": "transparent",
                                }
                              }
                              text={[Function]}
                              textAnchor="middle"
                              verticalAnchor="end"
                              width={450}
                              x={421}
                              y={NaN}
                            >
                              <g
                                transform="translate(316, NaN)"
                              >
                                <foreignObject
                                  height="60"
                                  onContextMenu={[Function]}
                                  width="60"
                                  x="75"
                                  y="0"
                                >
                                  <Component
                                    className="quiet-indicator--inside"
                                    data={
                                      Object {
                                        "quietTimingInfo": Object {
                                          "quietDurationMs": undefined,
                                          "quietUntilMs": 1,
                                        },
                                        "status": "GOOD",
                                      }
                                    }
                                    diameterPx={NaN}
                                  />
                                </foreignObject>
                              </g>
                            </QuietIndicatorWrapper>
                          </g>
                        </VictoryBar>
                        <VictoryLine
                          categories={
                            Object {
                              "x": Array [
                                "adsf",
                                "adsf2",
                              ],
                              "y": undefined,
                            }
                          }
                          containerComponent={
                            <VictoryContainer
                              className="VictoryContainer"
                              portalComponent={<Portal />}
                              portalZIndex={99}
                              responsive={true}
                            />
                          }
                          data={
                            Array [
                              Object {
                                "x": 0.5,
                                "y": 3,
                              },
                              Object {
                                "x": 1.5,
                                "y": 3,
                              },
                            ]
                          }
                          dataComponent={
                            <Curve
                              pathComponent={<Path />}
                              role="presentation"
                              shapeRendering="auto"
                            />
                          }
                          domain={
                            Object {
                              "x": Array [
                                1,
                                2,
                              ],
                              "y": Array [
                                0,
                                10.0000000001,
                              ],
                            }
                          }
                          groupComponent={
                            <VictoryClipContainer
                              circleComponent={<Circle />}
                              clipPathComponent={<ClipPath />}
                              groupComponent={<g />}
                              rectComponent={<Rect />}
                            />
                          }
                          height={NaN}
                          key="chart-line-4-key-4"
                          labelComponent={
                            <VictoryLabel
                              backgroundComponent={<Rect />}
                              capHeight={0.71}
                              direction="inherit"
                              groupComponent={<g />}
                              lineHeight={1}
                              renderInPortal={true}
                              textComponent={<Text />}
                              tspanComponent={<TSpan />}
                            />
                          }
                          name="chart-line-4"
                          padding={
                            Object {
                              "bottom": 120,
                              "left": 63,
                              "right": 29,
                              "top": 16,
                            }
                          }
                          range={
                            Object {
                              "x": Array [
                                63,
                                421,
                              ],
                              "y": Array [
                                NaN,
                                16,
                              ],
                            }
                          }
                          samples={50}
                          scale={
                            Object {
                              "x": [Function],
                              "y": [Function],
                            }
                          }
                          sortKey="x"
                          sortOrder="ascending"
                          standalone={false}
                          stringMap={
                            Object {
                              "x": Object {
                                "adsf": 1,
                                "adsf2": 2,
                              },
                              "y": null,
                            }
                          }
                          style={
                            Object {
                              "data": Object {
                                "stroke": "#be8c0b",
                                "strokeWidth": 2,
                              },
                              "parent": Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              },
                            }
                          }
                          theme={
                            Object {
                              "axis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offset": 14,
                                    "stroke": "var(--core-prominent)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "fill": "none",
                                    "pointerEvents": "painted",
                                    "stroke": "none",
                                  },
                                },
                              },
                              "bar": Object {
                                "style": Object {
                                  "data": Object {
                                    "padding": 8,
                                    "strokeWidth": 0,
                                  },
                                  "labels": Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 14,
                                    "stroke": "transparent",
                                  },
                                },
                              },
                              "dependentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                              "independentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                            }
                          }
                          width={450}
                        >
                          <VictoryClipContainer
                            circleComponent={<Circle />}
                            clipPathComponent={<ClipPath />}
                            data={
                              Array [
                                Object {
                                  "_x": 0.5,
                                  "_y": 3,
                                  "x": 0.5,
                                  "y": 3,
                                },
                                Object {
                                  "_x": 1.5,
                                  "_y": 3,
                                  "x": 1.5,
                                  "y": 3,
                                },
                              ]
                            }
                            domain={
                              Object {
                                "x": Array [
                                  1,
                                  2,
                                ],
                                "y": Array [
                                  0,
                                  10.0000000001,
                                ],
                              }
                            }
                            groupComponent={<g />}
                            height={NaN}
                            id="chart-line-4-parent-parent"
                            index="parent"
                            key="chart-line-4-parent-parent"
                            name="chart-line-4"
                            padding={
                              Object {
                                "bottom": 120,
                                "left": 63,
                                "right": 29,
                                "top": 16,
                              }
                            }
                            rectComponent={<Rect />}
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            standalone={false}
                            style={
                              Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              }
                            }
                            width={450}
                          >
                            <g
                              style={
                                Object {
                                  "height": NaN,
                                  "userSelect": "none",
                                  "width": "100%",
                                }
                              }
                            >
                              <Curve
                                data={
                                  Array [
                                    Object {
                                      "_x": 0.5,
                                      "_y": 3,
                                      "x": 0.5,
                                      "y": 3,
                                    },
                                    Object {
                                      "_x": 1.5,
                                      "_y": 3,
                                      "x": 1.5,
                                      "y": 3,
                                    },
                                  ]
                                }
                                groupComponent={
                                  <VictoryClipContainer
                                    circleComponent={<Circle />}
                                    clipPathComponent={<ClipPath />}
                                    groupComponent={<g />}
                                    rectComponent={<Rect />}
                                  />
                                }
                                id="chart-line-4-data-all"
                                index="all"
                                interpolation="linear"
                                key="chart-line-4-data-all"
                                pathComponent={<Path />}
                                role="presentation"
                                scale={
                                  Object {
                                    "x": [Function],
                                    "y": [Function],
                                  }
                                }
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "stroke": "#be8c0b",
                                    "strokeWidth": 2,
                                  }
                                }
                                theme={
                                  Object {
                                    "axis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offset": 14,
                                          "stroke": "var(--core-prominent)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "fill": "none",
                                          "pointerEvents": "painted",
                                          "stroke": "none",
                                        },
                                      },
                                    },
                                    "bar": Object {
                                      "style": Object {
                                        "data": Object {
                                          "padding": 8,
                                          "strokeWidth": 0,
                                        },
                                        "labels": Object {
                                          "fill": "var(--core-prominent)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 14,
                                          "stroke": "transparent",
                                        },
                                      },
                                    },
                                    "dependentAxis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offsetInlineStart": 16,
                                          "stroke": "var(--core-soft)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "stroke": "none",
                                        },
                                        "tickLabels": Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        },
                                        "ticks": Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        },
                                      },
                                    },
                                    "independentAxis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offsetInlineStart": 16,
                                          "stroke": "var(--core-soft)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "stroke": "none",
                                        },
                                        "tickLabels": Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        },
                                        "ticks": Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        },
                                      },
                                    },
                                  }
                                }
                              >
                                <Path
                                  d="M-116,NaNL242,NaN"
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "fill": "none",
                                      "stroke": "#be8c0b",
                                      "strokeWidth": 2,
                                    }
                                  }
                                >
                                  <path
                                    d="M-116,NaNL242,NaN"
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "fill": "none",
                                        "stroke": "#be8c0b",
                                        "strokeWidth": 2,
                                      }
                                    }
                                  />
                                </Path>
                              </Curve>
                            </g>
                          </VictoryClipContainer>
                        </VictoryLine>
                        <VictoryLine
                          categories={
                            Object {
                              "x": Array [
                                "adsf",
                                "adsf2",
                              ],
                              "y": undefined,
                            }
                          }
                          containerComponent={
                            <VictoryContainer
                              className="VictoryContainer"
                              portalComponent={<Portal />}
                              portalZIndex={99}
                              responsive={true}
                            />
                          }
                          data={
                            Array [
                              Object {
                                "x": 1.5,
                                "y": 3,
                              },
                              Object {
                                "x": 2.5,
                                "y": 3,
                              },
                            ]
                          }
                          dataComponent={
                            <Curve
                              pathComponent={<Path />}
                              role="presentation"
                              shapeRendering="auto"
                            />
                          }
                          domain={
                            Object {
                              "x": Array [
                                1,
                                2,
                              ],
                              "y": Array [
                                0,
                                10.0000000001,
                              ],
                            }
                          }
                          groupComponent={
                            <VictoryClipContainer
                              circleComponent={<Circle />}
                              clipPathComponent={<ClipPath />}
                              groupComponent={<g />}
                              rectComponent={<Rect />}
                            />
                          }
                          height={NaN}
                          key="chart-line-5-key-5"
                          labelComponent={
                            <VictoryLabel
                              backgroundComponent={<Rect />}
                              capHeight={0.71}
                              direction="inherit"
                              groupComponent={<g />}
                              lineHeight={1}
                              renderInPortal={true}
                              textComponent={<Text />}
                              tspanComponent={<TSpan />}
                            />
                          }
                          name="chart-line-5"
                          padding={
                            Object {
                              "bottom": 120,
                              "left": 63,
                              "right": 29,
                              "top": 16,
                            }
                          }
                          range={
                            Object {
                              "x": Array [
                                63,
                                421,
                              ],
                              "y": Array [
                                NaN,
                                16,
                              ],
                            }
                          }
                          samples={50}
                          scale={
                            Object {
                              "x": [Function],
                              "y": [Function],
                            }
                          }
                          sortKey="x"
                          sortOrder="ascending"
                          standalone={false}
                          stringMap={
                            Object {
                              "x": Object {
                                "adsf": 1,
                                "adsf2": 2,
                              },
                              "y": null,
                            }
                          }
                          style={
                            Object {
                              "data": Object {
                                "stroke": "#be8c0b",
                                "strokeWidth": 2,
                              },
                              "parent": Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              },
                            }
                          }
                          theme={
                            Object {
                              "axis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offset": 14,
                                    "stroke": "var(--core-prominent)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "fill": "none",
                                    "pointerEvents": "painted",
                                    "stroke": "none",
                                  },
                                },
                              },
                              "bar": Object {
                                "style": Object {
                                  "data": Object {
                                    "padding": 8,
                                    "strokeWidth": 0,
                                  },
                                  "labels": Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 14,
                                    "stroke": "transparent",
                                  },
                                },
                              },
                              "dependentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                              "independentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                            }
                          }
                          width={450}
                        >
                          <VictoryClipContainer
                            circleComponent={<Circle />}
                            clipPathComponent={<ClipPath />}
                            data={
                              Array [
                                Object {
                                  "_x": 1.5,
                                  "_y": 3,
                                  "x": 1.5,
                                  "y": 3,
                                },
                                Object {
                                  "_x": 2.5,
                                  "_y": 3,
                                  "x": 2.5,
                                  "y": 3,
                                },
                              ]
                            }
                            domain={
                              Object {
                                "x": Array [
                                  1,
                                  2,
                                ],
                                "y": Array [
                                  0,
                                  10.0000000001,
                                ],
                              }
                            }
                            groupComponent={<g />}
                            height={NaN}
                            id="chart-line-5-parent-parent"
                            index="parent"
                            key="chart-line-5-parent-parent"
                            name="chart-line-5"
                            padding={
                              Object {
                                "bottom": 120,
                                "left": 63,
                                "right": 29,
                                "top": 16,
                              }
                            }
                            rectComponent={<Rect />}
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            standalone={false}
                            style={
                              Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              }
                            }
                            width={450}
                          >
                            <g
                              style={
                                Object {
                                  "height": NaN,
                                  "userSelect": "none",
                                  "width": "100%",
                                }
                              }
                            >
                              <Curve
                                data={
                                  Array [
                                    Object {
                                      "_x": 1.5,
                                      "_y": 3,
                                      "x": 1.5,
                                      "y": 3,
                                    },
                                    Object {
                                      "_x": 2.5,
                                      "_y": 3,
                                      "x": 2.5,
                                      "y": 3,
                                    },
                                  ]
                                }
                                groupComponent={
                                  <VictoryClipContainer
                                    circleComponent={<Circle />}
                                    clipPathComponent={<ClipPath />}
                                    groupComponent={<g />}
                                    rectComponent={<Rect />}
                                  />
                                }
                                id="chart-line-5-data-all"
                                index="all"
                                interpolation="linear"
                                key="chart-line-5-data-all"
                                pathComponent={<Path />}
                                role="presentation"
                                scale={
                                  Object {
                                    "x": [Function],
                                    "y": [Function],
                                  }
                                }
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "stroke": "#be8c0b",
                                    "strokeWidth": 2,
                                  }
                                }
                                theme={
                                  Object {
                                    "axis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offset": 14,
                                          "stroke": "var(--core-prominent)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "fill": "none",
                                          "pointerEvents": "painted",
                                          "stroke": "none",
                                        },
                                      },
                                    },
                                    "bar": Object {
                                      "style": Object {
                                        "data": Object {
                                          "padding": 8,
                                          "strokeWidth": 0,
                                        },
                                        "labels": Object {
                                          "fill": "var(--core-prominent)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 14,
                                          "stroke": "transparent",
                                        },
                                      },
                                    },
                                    "dependentAxis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offsetInlineStart": 16,
                                          "stroke": "var(--core-soft)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "stroke": "none",
                                        },
                                        "tickLabels": Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        },
                                        "ticks": Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        },
                                      },
                                    },
                                    "independentAxis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offsetInlineStart": 16,
                                          "stroke": "var(--core-soft)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "stroke": "none",
                                        },
                                        "tickLabels": Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        },
                                        "ticks": Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        },
                                      },
                                    },
                                  }
                                }
                              >
                                <Path
                                  d="M242,NaNL600,NaN"
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "fill": "none",
                                      "stroke": "#be8c0b",
                                      "strokeWidth": 2,
                                    }
                                  }
                                >
                                  <path
                                    d="M242,NaNL600,NaN"
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "fill": "none",
                                        "stroke": "#be8c0b",
                                        "strokeWidth": 2,
                                      }
                                    }
                                  />
                                </Path>
                              </Curve>
                            </g>
                          </VictoryClipContainer>
                        </VictoryLine>
                        <VictoryLine
                          categories={
                            Object {
                              "x": Array [
                                "adsf",
                                "adsf2",
                              ],
                              "y": undefined,
                            }
                          }
                          containerComponent={
                            <VictoryContainer
                              className="VictoryContainer"
                              portalComponent={<Portal />}
                              portalZIndex={99}
                              responsive={true}
                            />
                          }
                          data={
                            Array [
                              Object {
                                "x": 0.5,
                                "y": 3,
                              },
                              Object {
                                "x": 1.5,
                                "y": 3,
                              },
                            ]
                          }
                          dataComponent={
                            <Curve
                              pathComponent={<Path />}
                              role="presentation"
                              shapeRendering="auto"
                            />
                          }
                          domain={
                            Object {
                              "x": Array [
                                1,
                                2,
                              ],
                              "y": Array [
                                0,
                                10.0000000001,
                              ],
                            }
                          }
                          groupComponent={
                            <VictoryClipContainer
                              circleComponent={<Circle />}
                              clipPathComponent={<ClipPath />}
                              groupComponent={<g />}
                              rectComponent={<Rect />}
                            />
                          }
                          height={NaN}
                          key="chart-line-6-key-6"
                          labelComponent={
                            <VictoryLabel
                              backgroundComponent={<Rect />}
                              capHeight={0.71}
                              direction="inherit"
                              groupComponent={<g />}
                              lineHeight={1}
                              renderInPortal={true}
                              textComponent={<Text />}
                              tspanComponent={<TSpan />}
                            />
                          }
                          name="chart-line-6"
                          padding={
                            Object {
                              "bottom": 120,
                              "left": 63,
                              "right": 29,
                              "top": 16,
                            }
                          }
                          range={
                            Object {
                              "x": Array [
                                63,
                                421,
                              ],
                              "y": Array [
                                NaN,
                                16,
                              ],
                            }
                          }
                          samples={50}
                          scale={
                            Object {
                              "x": [Function],
                              "y": [Function],
                            }
                          }
                          sortKey="x"
                          sortOrder="ascending"
                          standalone={false}
                          stringMap={
                            Object {
                              "x": Object {
                                "adsf": 1,
                                "adsf2": 2,
                              },
                              "y": null,
                            }
                          }
                          style={
                            Object {
                              "data": Object {
                                "stroke": "#d24c4c",
                                "strokeWidth": 2,
                              },
                              "parent": Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              },
                            }
                          }
                          theme={
                            Object {
                              "axis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offset": 14,
                                    "stroke": "var(--core-prominent)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "fill": "none",
                                    "pointerEvents": "painted",
                                    "stroke": "none",
                                  },
                                },
                              },
                              "bar": Object {
                                "style": Object {
                                  "data": Object {
                                    "padding": 8,
                                    "strokeWidth": 0,
                                  },
                                  "labels": Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 14,
                                    "stroke": "transparent",
                                  },
                                },
                              },
                              "dependentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                              "independentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                            }
                          }
                          width={450}
                        >
                          <VictoryClipContainer
                            circleComponent={<Circle />}
                            clipPathComponent={<ClipPath />}
                            data={
                              Array [
                                Object {
                                  "_x": 0.5,
                                  "_y": 3,
                                  "x": 0.5,
                                  "y": 3,
                                },
                                Object {
                                  "_x": 1.5,
                                  "_y": 3,
                                  "x": 1.5,
                                  "y": 3,
                                },
                              ]
                            }
                            domain={
                              Object {
                                "x": Array [
                                  1,
                                  2,
                                ],
                                "y": Array [
                                  0,
                                  10.0000000001,
                                ],
                              }
                            }
                            groupComponent={<g />}
                            height={NaN}
                            id="chart-line-6-parent-parent"
                            index="parent"
                            key="chart-line-6-parent-parent"
                            name="chart-line-6"
                            padding={
                              Object {
                                "bottom": 120,
                                "left": 63,
                                "right": 29,
                                "top": 16,
                              }
                            }
                            rectComponent={<Rect />}
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            standalone={false}
                            style={
                              Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              }
                            }
                            width={450}
                          >
                            <g
                              style={
                                Object {
                                  "height": NaN,
                                  "userSelect": "none",
                                  "width": "100%",
                                }
                              }
                            >
                              <Curve
                                data={
                                  Array [
                                    Object {
                                      "_x": 0.5,
                                      "_y": 3,
                                      "x": 0.5,
                                      "y": 3,
                                    },
                                    Object {
                                      "_x": 1.5,
                                      "_y": 3,
                                      "x": 1.5,
                                      "y": 3,
                                    },
                                  ]
                                }
                                groupComponent={
                                  <VictoryClipContainer
                                    circleComponent={<Circle />}
                                    clipPathComponent={<ClipPath />}
                                    groupComponent={<g />}
                                    rectComponent={<Rect />}
                                  />
                                }
                                id="chart-line-6-data-all"
                                index="all"
                                interpolation="linear"
                                key="chart-line-6-data-all"
                                pathComponent={<Path />}
                                role="presentation"
                                scale={
                                  Object {
                                    "x": [Function],
                                    "y": [Function],
                                  }
                                }
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "stroke": "#d24c4c",
                                    "strokeWidth": 2,
                                  }
                                }
                                theme={
                                  Object {
                                    "axis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offset": 14,
                                          "stroke": "var(--core-prominent)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "fill": "none",
                                          "pointerEvents": "painted",
                                          "stroke": "none",
                                        },
                                      },
                                    },
                                    "bar": Object {
                                      "style": Object {
                                        "data": Object {
                                          "padding": 8,
                                          "strokeWidth": 0,
                                        },
                                        "labels": Object {
                                          "fill": "var(--core-prominent)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 14,
                                          "stroke": "transparent",
                                        },
                                      },
                                    },
                                    "dependentAxis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offsetInlineStart": 16,
                                          "stroke": "var(--core-soft)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "stroke": "none",
                                        },
                                        "tickLabels": Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        },
                                        "ticks": Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        },
                                      },
                                    },
                                    "independentAxis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offsetInlineStart": 16,
                                          "stroke": "var(--core-soft)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "stroke": "none",
                                        },
                                        "tickLabels": Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        },
                                        "ticks": Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        },
                                      },
                                    },
                                  }
                                }
                              >
                                <Path
                                  d="M-116,NaNL242,NaN"
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "fill": "none",
                                      "stroke": "#d24c4c",
                                      "strokeWidth": 2,
                                    }
                                  }
                                >
                                  <path
                                    d="M-116,NaNL242,NaN"
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "fill": "none",
                                        "stroke": "#d24c4c",
                                        "strokeWidth": 2,
                                      }
                                    }
                                  />
                                </Path>
                              </Curve>
                            </g>
                          </VictoryClipContainer>
                        </VictoryLine>
                        <VictoryLine
                          categories={
                            Object {
                              "x": Array [
                                "adsf",
                                "adsf2",
                              ],
                              "y": undefined,
                            }
                          }
                          containerComponent={
                            <VictoryContainer
                              className="VictoryContainer"
                              portalComponent={<Portal />}
                              portalZIndex={99}
                              responsive={true}
                            />
                          }
                          data={
                            Array [
                              Object {
                                "x": 1.5,
                                "y": 3,
                              },
                              Object {
                                "x": 2.5,
                                "y": 3,
                              },
                            ]
                          }
                          dataComponent={
                            <Curve
                              pathComponent={<Path />}
                              role="presentation"
                              shapeRendering="auto"
                            />
                          }
                          domain={
                            Object {
                              "x": Array [
                                1,
                                2,
                              ],
                              "y": Array [
                                0,
                                10.0000000001,
                              ],
                            }
                          }
                          groupComponent={
                            <VictoryClipContainer
                              circleComponent={<Circle />}
                              clipPathComponent={<ClipPath />}
                              groupComponent={<g />}
                              rectComponent={<Rect />}
                            />
                          }
                          height={NaN}
                          key="chart-line-7-key-7"
                          labelComponent={
                            <VictoryLabel
                              backgroundComponent={<Rect />}
                              capHeight={0.71}
                              direction="inherit"
                              groupComponent={<g />}
                              lineHeight={1}
                              renderInPortal={true}
                              textComponent={<Text />}
                              tspanComponent={<TSpan />}
                            />
                          }
                          name="chart-line-7"
                          padding={
                            Object {
                              "bottom": 120,
                              "left": 63,
                              "right": 29,
                              "top": 16,
                            }
                          }
                          range={
                            Object {
                              "x": Array [
                                63,
                                421,
                              ],
                              "y": Array [
                                NaN,
                                16,
                              ],
                            }
                          }
                          samples={50}
                          scale={
                            Object {
                              "x": [Function],
                              "y": [Function],
                            }
                          }
                          sortKey="x"
                          sortOrder="ascending"
                          standalone={false}
                          stringMap={
                            Object {
                              "x": Object {
                                "adsf": 1,
                                "adsf2": 2,
                              },
                              "y": null,
                            }
                          }
                          style={
                            Object {
                              "data": Object {
                                "stroke": "#d24c4c",
                                "strokeWidth": 2,
                              },
                              "parent": Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              },
                            }
                          }
                          theme={
                            Object {
                              "axis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offset": 14,
                                    "stroke": "var(--core-prominent)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "fill": "none",
                                    "pointerEvents": "painted",
                                    "stroke": "none",
                                  },
                                },
                              },
                              "bar": Object {
                                "style": Object {
                                  "data": Object {
                                    "padding": 8,
                                    "strokeWidth": 0,
                                  },
                                  "labels": Object {
                                    "fill": "var(--core-prominent)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 14,
                                    "stroke": "transparent",
                                  },
                                },
                              },
                              "dependentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                              "independentAxis": Object {
                                "style": Object {
                                  "axis": Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  },
                                  "grid": Object {
                                    "stroke": "none",
                                  },
                                  "tickLabels": Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 14,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  },
                                  "ticks": Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  },
                                },
                              },
                            }
                          }
                          width={450}
                        >
                          <VictoryClipContainer
                            circleComponent={<Circle />}
                            clipPathComponent={<ClipPath />}
                            data={
                              Array [
                                Object {
                                  "_x": 1.5,
                                  "_y": 3,
                                  "x": 1.5,
                                  "y": 3,
                                },
                                Object {
                                  "_x": 2.5,
                                  "_y": 3,
                                  "x": 2.5,
                                  "y": 3,
                                },
                              ]
                            }
                            domain={
                              Object {
                                "x": Array [
                                  1,
                                  2,
                                ],
                                "y": Array [
                                  0,
                                  10.0000000001,
                                ],
                              }
                            }
                            groupComponent={<g />}
                            height={NaN}
                            id="chart-line-7-parent-parent"
                            index="parent"
                            key="chart-line-7-parent-parent"
                            name="chart-line-7"
                            padding={
                              Object {
                                "bottom": 120,
                                "left": 63,
                                "right": 29,
                                "top": 16,
                              }
                            }
                            rectComponent={<Rect />}
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            standalone={false}
                            style={
                              Object {
                                "height": NaN,
                                "userSelect": "none",
                                "width": "100%",
                              }
                            }
                            width={450}
                          >
                            <g
                              style={
                                Object {
                                  "height": NaN,
                                  "userSelect": "none",
                                  "width": "100%",
                                }
                              }
                            >
                              <Curve
                                data={
                                  Array [
                                    Object {
                                      "_x": 1.5,
                                      "_y": 3,
                                      "x": 1.5,
                                      "y": 3,
                                    },
                                    Object {
                                      "_x": 2.5,
                                      "_y": 3,
                                      "x": 2.5,
                                      "y": 3,
                                    },
                                  ]
                                }
                                groupComponent={
                                  <VictoryClipContainer
                                    circleComponent={<Circle />}
                                    clipPathComponent={<ClipPath />}
                                    groupComponent={<g />}
                                    rectComponent={<Rect />}
                                  />
                                }
                                id="chart-line-7-data-all"
                                index="all"
                                interpolation="linear"
                                key="chart-line-7-data-all"
                                pathComponent={<Path />}
                                role="presentation"
                                scale={
                                  Object {
                                    "x": [Function],
                                    "y": [Function],
                                  }
                                }
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "stroke": "#d24c4c",
                                    "strokeWidth": 2,
                                  }
                                }
                                theme={
                                  Object {
                                    "axis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offset": 14,
                                          "stroke": "var(--core-prominent)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "fill": "none",
                                          "pointerEvents": "painted",
                                          "stroke": "none",
                                        },
                                      },
                                    },
                                    "bar": Object {
                                      "style": Object {
                                        "data": Object {
                                          "padding": 8,
                                          "strokeWidth": 0,
                                        },
                                        "labels": Object {
                                          "fill": "var(--core-prominent)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 14,
                                          "stroke": "transparent",
                                        },
                                      },
                                    },
                                    "dependentAxis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offsetInlineStart": 16,
                                          "stroke": "var(--core-soft)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "stroke": "none",
                                        },
                                        "tickLabels": Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        },
                                        "ticks": Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        },
                                      },
                                    },
                                    "independentAxis": Object {
                                      "style": Object {
                                        "axis": Object {
                                          "offsetInlineStart": 16,
                                          "stroke": "var(--core-soft)",
                                          "strokeWidth": 1,
                                        },
                                        "grid": Object {
                                          "stroke": "none",
                                        },
                                        "tickLabels": Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 14,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        },
                                        "ticks": Object {
                                          "size": 4,
                                          "stroke": "var(--core-main)",
                                          "strokeWidth": 1,
                                        },
                                      },
                                    },
                                  }
                                }
                              >
                                <Path
                                  d="M242,NaNL600,NaN"
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "fill": "none",
                                      "stroke": "#d24c4c",
                                      "strokeWidth": 2,
                                    }
                                  }
                                >
                                  <path
                                    d="M242,NaNL600,NaN"
                                    role="presentation"
                                    shapeRendering="auto"
                                    style={
                                      Object {
                                        "fill": "none",
                                        "stroke": "#d24c4c",
                                        "strokeWidth": 2,
                                      }
                                    }
                                  />
                                </Path>
                              </Curve>
                            </g>
                          </VictoryClipContainer>
                        </VictoryLine>
                      </svg>
                      <div
                        style={
                          Object {
                            "height": "auto",
                            "left": 0,
                            "position": "absolute",
                            "top": 0,
                            "width": "100%",
                            "zIndex": 99,
                          }
                        }
                      >
                        <Portal
                          height={NaN}
                          style={
                            Object {
                              "height": "auto",
                              "overflow": "visible",
                              "width": "100%",
                            }
                          }
                          viewBox="0 0 450 NaN"
                          width={450}
                        >
                          <svg
                            height={NaN}
                            style={
                              Object {
                                "height": "auto",
                                "overflow": "visible",
                                "width": "100%",
                              }
                            }
                            viewBox="0 0 450 NaN"
                            width={450}
                          />
                        </Portal>
                      </div>
                    </div>
                  </VictoryContainer>
                </VictoryChart>
              </div>
            </Component>
          </div>
        </Component>
      </Component>
    </div>
  </Component>
</ApolloProvider>
`;
